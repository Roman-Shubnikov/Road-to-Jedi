{"version":3,"sources":["../../../src/components/Banner/Banner.tsx"],"names":["React","getClassName","classNames","usePlatform","ANDROID","IOS","VKCOM","Icon24Chevron","Icon24DismissSubstract","Icon24DismissDark","Icon24Cancel","Tappable","Headline","Caption","Text","hasReactNode","Title","renderHeader","size","header","renderSubheader","subheader","Banner","props","platform","className","mode","imageTheme","before","asideMode","text","children","background","actions","onDismiss","restProps","InnerComponent","defaultProps"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, ReactNode, HTMLAttributes, MouseEventHandler } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { ANDROID, IOS, VKCOM } from '../../lib/platform';\nimport { Icon24Chevron, Icon24DismissSubstract, Icon24DismissDark, Icon24Cancel } from '@vkontakte/icons';\nimport Tappable from '../Tappable/Tappable';\nimport Headline from '../Typography/Headline/Headline';\nimport Caption from '../Typography/Caption/Caption';\nimport Text from '../Typography/Text/Text';\nimport { hasReactNode } from '../../lib/utils';\nimport Title from '../Typography/Title/Title';\n\nexport interface BannerProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Тип баннера.\n   */\n  mode?: 'tint' | 'image';\n  size?: 's' | 'm';\n  /**\n   * Тип действия в правой части баннера.\n   *\n   * - `dismiss` – отображается иконка крестика, при клике на неё сработает свойство `onDismiss`.\n   * - `expand` – отображается иконка шеврона, которая подразумевает, что при клике на баннер можно куда-то перейти.\n   */\n  asideMode?: 'dismiss' | 'expand';\n  /**\n   * Срабатывает при клике на иконку крестика при `asideMode=\"dismiss\"`.\n   */\n  onDismiss?: MouseEventHandler<HTMLDivElement>;\n  /**\n   * Содержимое, отображаемое в левой части баннера.\n   */\n  before?: ReactNode;\n  /**\n   * Заголовок. <br />\n   * При использовании этого свойства рекомендуется не указывать `text`.\n   */\n  header?: ReactNode;\n  /**\n   * Подзаголовок. <br />\n   * При использовании этого свойства рекомендуется не указывать `text`.\n   */\n  subheader?: ReactNode;\n  /**\n   * Текст баннера. <br />\n   * Это свойство следует использовать без указания `header` и `subheader`.\n   */\n  text?: ReactNode;\n  /**\n   * При использовании `mode=\"image\"`.\n   *\n   * - `light` – в качестве фона используется светлое изображение, цвет текста в баннере будет тёмным.\n   * - `dark` – в качестве фона используется тёмное изображение, цвет текста будет светлым.\n   */\n  imageTheme?: 'light' | 'dark';\n  /**\n   * При использовании `mode=\"image\"`.\n   *\n   * Элемент, который нужно стилизовать цветом и/или фоном. Этот элемент будет растянут на 100% ширины и высоты баннера.\n   */\n  background?: ReactNode;\n  /**\n   * Кнопки, отображаемые в баннере.\n   *\n   * - В режиме `tint` или в `image` со светлым фоном рекомендуется использовать только `<Button mode=\"primary\" />` или `<Button mode=\"tertiary\" hasHover={false} />`.\n   * - В режиме `image` с тёмным фоном – `<Button mode=\"overlay_primary\" />`.\n   */\n  actions?: ReactNode;\n}\n\nfunction renderHeader({ size, header }: Pick<BannerProps, 'size' | 'header'>) {\n  switch (size) {\n    case 's':\n      return <Headline weight=\"medium\" className=\"Banner__header\">{header}</Headline>;\n    case 'm':\n      return <Title level=\"2\" weight=\"medium\" className=\"Banner__header\">{header}</Title>;\n  }\n}\n\nfunction renderSubheader({ size, subheader }: Pick<BannerProps, 'size' | 'subheader'>) {\n  switch (size) {\n    case 's':\n      return <Caption level=\"1\" weight=\"regular\" className=\"Banner__subheader\">{subheader}</Caption>;\n    case 'm':\n      return <Text weight=\"regular\" className=\"Banner__subheader\">{subheader}</Text>;\n  }\n}\n\nconst Banner: FunctionComponent<BannerProps> = (props: BannerProps) => {\n  const platform = usePlatform();\n  const {\n    className, mode, imageTheme, size, before, asideMode, header, subheader, text, children, background, actions,\n    onDismiss,\n    ...restProps\n  } = props;\n\n  const InnerComponent = asideMode === 'expand' ? Tappable : 'div';\n\n  return (\n    <div\n      {...restProps}\n      className={classNames(\n        getClassName('Banner', platform),\n        `Banner--md-${mode}`,\n        `Banner--sz-${size}`, {\n          'Banner--inverted': mode === 'image' && imageTheme === 'dark',\n        }, className,\n      )}\n    >\n      <InnerComponent className=\"Banner__in\">\n        {mode === 'image' && background &&\n        <div className=\"Banner__bg\">\n          {background}\n        </div>\n        }\n\n        {before && <div className=\"Banner__before\">{before}</div>}\n\n        <div className=\"Banner__content\">\n          {hasReactNode(header) && renderHeader({ size, header })}\n          {hasReactNode(subheader) && renderSubheader({ size, subheader })}\n          {hasReactNode(text) && <Text weight=\"regular\" className=\"Banner__text\">{text}</Text>}\n          {actions &&\n          <div className=\"Banner__actions\">{actions}</div>\n          }\n        </div>\n\n        {asideMode === 'expand' &&\n        <div className=\"Banner__expand\">\n          <Icon24Chevron />\n        </div>\n        }\n\n        {asideMode === 'dismiss' &&\n        <div className=\"Banner__dismiss\">\n          <div className=\"Banner__dismissIcon\" onClick={onDismiss}>\n            {(platform === ANDROID || platform === VKCOM) && <Icon24Cancel />}\n            {platform === IOS && (mode === 'image' ? <Icon24DismissDark /> : <Icon24DismissSubstract />)}\n          </div>\n        </div>\n        }\n      </InnerComponent>\n    </div>\n  );\n};\n\nBanner.defaultProps = {\n  mode: 'tint',\n  size: 's',\n  imageTheme: 'dark',\n};\n\nexport default Banner;\n"],"file":"Banner.js"}