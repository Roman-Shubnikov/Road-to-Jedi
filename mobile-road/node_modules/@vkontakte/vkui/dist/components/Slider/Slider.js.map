{"version":3,"sources":["../../../src/components/Slider/Slider.tsx"],"names":["React","Component","Touch","classNames","getClassName","withPlatform","canUseDOM","setRef","withAdaptivity","precisionRound","number","precision","factor","Math","pow","round","Slider","props","e","boundingRect","container","getBoundingClientRect","setState","containerWidth","width","absolutePosition","validateAbsolute","startX","left","percentPosition","absoluteToPecent","onChange","percentToValue","isControlledOutside","state","shiftX","originalEvent","preventDefault","getRootRef","hasOwnProperty","value","absolute","res","max","min","step","stepCount","absStep","percent","stepFloatPart","split","length","validatePercent","valueToPercent","prevProps","className","defaultValue","platform","sizeY","restProps","getRef","onStart","onMoveX"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, RefCallback } from 'react';\nimport Touch, { TouchEventHandler, TouchEvent } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { HasPlatform, HasRootRef } from '../../types';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\nimport { setRef } from '../../lib/utils';\nimport withAdaptivity, { AdaptivityProps } from '../../hoc/withAdaptivity';\n\nexport interface SliderProps extends\n  HasRootRef<HTMLDivElement>,\n  HasPlatform,\n  Omit<HTMLAttributes<HTMLDivElement>, 'defaultValue' | 'onChange'>,\n  AdaptivityProps {\n  min?: number;\n  max?: number;\n  value?: number;\n  step?: number;\n  onChange?(value: number, e: TouchEvent): void;\n  defaultValue?: number;\n}\n\nexport interface SliderState {\n  startX: number;\n  percentPosition: number;\n  containerWidth: number;\n}\n\nexport function precisionRound(number: number, precision: number) {\n  let factor = Math.pow(10, precision || 1);\n  return Math.round(number * factor) / factor;\n}\n\nclass Slider extends Component<SliderProps, SliderState> {\n  constructor(props: SliderProps) {\n    super(props);\n    this.state = {\n      startX: 0,\n      percentPosition: 0,\n      containerWidth: 0,\n    };\n    this.isControlledOutside = this.props.hasOwnProperty('value');\n  }\n\n  static defaultProps: SliderProps = {\n    min: 0,\n    max: 100,\n    step: 0,\n  };\n\n  isControlledOutside: boolean;\n\n  container: HTMLDivElement;\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    const boundingRect = this.container.getBoundingClientRect();\n    this.setState({\n      containerWidth: boundingRect.width,\n    }, () => {\n      const absolutePosition = this.validateAbsolute(e.startX - boundingRect.left);\n      const percentPosition = this.absoluteToPecent(absolutePosition);\n\n      this.onChange(this.percentToValue(percentPosition), e);\n\n      if (this.isControlledOutside) {\n        this.setState({ startX: absolutePosition });\n      } else {\n        this.setState({\n          startX: absolutePosition,\n          percentPosition,\n        });\n      }\n    });\n  };\n\n  onMoveX: TouchEventHandler = (e: TouchEvent) => {\n    const absolutePosition = this.validateAbsolute(this.state.startX + (e.shiftX || 0));\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n\n    this.onChange(this.percentToValue(percentPosition), e);\n\n    if (!this.isControlledOutside) {\n      this.setState({ percentPosition });\n    }\n\n    e.originalEvent.preventDefault();\n  };\n\n  onChange(value: number, e: TouchEvent) {\n    this.props.onChange && this.props.onChange(value, e);\n  }\n\n  validateAbsolute(absolute: number) {\n    let res = Math.max(0, Math.min(absolute, this.state.containerWidth));\n\n    if (this.props.step > 0) {\n      const stepCount = (this.props.max - this.props.min) / this.props.step;\n      const absStep = this.state.containerWidth / stepCount;\n\n      res = Math.round(res / absStep) * absStep;\n    }\n\n    return res;\n  }\n\n  validatePercent(percent: number) {\n    return Math.max(0, Math.min(percent, 100));\n  }\n\n  absoluteToPecent(absolute: number) {\n    return absolute * 100 / this.state.containerWidth;\n  }\n\n  percentToValue(percent: number) {\n    const res = percent * (this.props.max - this.props.min) / 100 + this.props.min;\n    if (this.props.step > 0) {\n      const stepFloatPart = `${this.props.step}`.split('.')[1] || '';\n      return precisionRound(res, stepFloatPart.length);\n    }\n    return res;\n  }\n\n  valueToPercent(value: number) {\n    return (value - this.props.min) * 100 / (this.props.max - this.props.min);\n  }\n\n  get value() {\n    if (this.isControlledOutside) {\n      return this.props.value;\n    } else if (this.props.hasOwnProperty('defaultValue')) {\n      return this.props.defaultValue;\n    } else {\n      return this.props.min;\n    }\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      const boundingRect = this.container.getBoundingClientRect();\n      this.setState({\n        containerWidth: boundingRect.width,\n      }, () => {\n        this.setState({ percentPosition: this.validatePercent(this.valueToPercent(this.value)) });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: SliderProps) {\n    if (this.isControlledOutside && this.props.value !== prevProps.value) {\n      this.setState({ percentPosition: this.validatePercent(this.valueToPercent(this.props.value)) });\n    }\n  }\n\n  getRef: RefCallback<HTMLDivElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  render() {\n    const { className, min, max, step, value, defaultValue,\n      onChange, getRootRef, platform, sizeY, ...restProps } = this.props;\n\n    return (\n      <div\n        {...restProps}\n        className={classNames(getClassName('Slider', platform), className, `Slider--sizeY-${sizeY}`)}\n      >\n        <Touch getRootRef={this.getRef} onStart={this.onStart} onMoveX={this.onMoveX} className=\"Slider__in\">\n          <div className=\"Slider__dragger\" style={{ width: `${this.state.percentPosition}%` }}>\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--end')}\n            />\n          </div>\n        </Touch>\n      </div>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(Slider), {\n  sizeY: true,\n});\n"],"file":"Slider.js"}