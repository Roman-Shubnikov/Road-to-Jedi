{"version":3,"sources":["../../../src/components/PanelHeader/PanelHeader.tsx"],"names":["React","useContext","usePlatform","getClassname","classNames","FixedLayout","Separator","VKCOM","ConfigProviderContext","WebviewType","withAdaptivity","SizeType","isPrimitiveReactNode","Text","PanelHeaderIn","children","left","right","webviewType","isPrimitive","platform","VKAPPS","PanelHeader","props","className","separator","visor","transparent","shadow","getRef","getRootRef","sizeX","sizeY","fixed","restProps","needShadow","REGULAR","isFixed","defaultProps"],"mappings":"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","sourcesContent":["import React, { FC, HTMLAttributes, ReactNode, useContext } from 'react';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassname from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Separator from '../Separator/Separator';\nimport { VKCOM } from '../../lib/platform';\nimport { HasRef, HasRootRef } from '../../types';\nimport { ConfigProviderContext, WebviewType } from '../ConfigProvider/ConfigProviderContext';\nimport withAdaptivity, { AdaptivityProps, SizeType } from '../../hoc/withAdaptivity';\nimport { isPrimitiveReactNode } from '../../lib/utils';\nimport Text from '../Typography/Text/Text';\n\nexport interface PanelHeaderProps extends\n  HTMLAttributes<HTMLDivElement>,\n  HasRef<HTMLDivElement>,\n  HasRootRef<HTMLDivElement>,\n  AdaptivityProps {\n  left?: ReactNode;\n  right?: ReactNode;\n  separator?: boolean;\n  transparent?: boolean;\n  shadow?: boolean;\n  /**\n   * Если `false`, то шапка будет нулевой высоты и контент панели \"залезет\" под неё\n   */\n  visor?: boolean;\n  /**\n   * Если `false`, то шапка будет в потоке\n   */\n  fixed?: boolean;\n}\n\nconst PanelHeaderIn: FC<PanelHeaderProps> = ({ children, left, right }) => {\n  const { webviewType } = useContext(ConfigProviderContext);\n  const isPrimitive = isPrimitiveReactNode(children);\n  const platform = usePlatform();\n\n  return (\n    <div className=\"PanelHeader__in\">\n      <div className=\"PanelHeader__left\">\n        {left}\n      </div>\n      <div className=\"PanelHeader__content\">\n        {isPrimitive ? platform === VKCOM ? <Text weight=\"medium\">{children}</Text> : <span>{children}</span> : children}\n      </div>\n      <div className=\"PanelHeader__right\">\n        {webviewType !== WebviewType.VKAPPS && right}\n      </div>\n    </div>\n  );\n};\n\nconst PanelHeader: FC<PanelHeaderProps> = (props) => {\n  const {\n    className,\n    left,\n    children,\n    right,\n    separator,\n    visor,\n    transparent,\n    shadow,\n    getRef,\n    getRootRef,\n    sizeX,\n    sizeY,\n    fixed,\n    ...restProps\n  } = props;\n  const platform = usePlatform();\n  const { webviewType } = useContext(ConfigProviderContext);\n  const needShadow = shadow && sizeX === SizeType.REGULAR;\n  const isFixed = platform === VKCOM ? false : fixed;\n\n  return (\n    <div\n      {...restProps}\n      className={\n        classNames(\n          getClassname('PanelHeader', platform),\n          {\n            'PanelHeader--trnsp': transparent,\n            'PanelHeader--shadow': needShadow,\n            'PanelHeader--vis': visor,\n            'PanelHeader--sep': separator && visor,\n            'PanelHeader--vkapps': webviewType === WebviewType.VKAPPS,\n            'PanelHeader--no-left': !left,\n            'PanelHeader--no-right': !right,\n            'PanelHeader--fixed': isFixed,\n          },\n          `PanelHeader--sizeX-${sizeX}`,\n          className,\n        )\n      }\n      ref={isFixed ? getRootRef : getRef}\n    >\n      {isFixed ?\n        <FixedLayout className=\"PanelHeader__fixed\" vertical=\"top\" getRootRef={getRef}>\n          <PanelHeaderIn {...props} />\n        </FixedLayout> :\n        <PanelHeaderIn {...props} />\n      }\n      {separator && visor && platform !== VKCOM && <Separator\n        className=\"PanelHeader__separator\"\n        expanded={sizeX === SizeType.REGULAR}\n      />}\n    </div>\n  );\n};\n\nPanelHeader.defaultProps = {\n  separator: true,\n  transparent: false,\n  visor: true,\n  fixed: true,\n};\n\nexport default withAdaptivity(PanelHeader, {\n  sizeX: true,\n  sizeY: true,\n});\n"],"file":"PanelHeader.js"}