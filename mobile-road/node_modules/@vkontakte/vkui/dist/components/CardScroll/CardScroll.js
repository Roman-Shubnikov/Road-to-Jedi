import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import React, { useRef } from 'react';
import classNames from '../../lib/classNames';
import getClassname from '../../helpers/getClassName';
import usePlatform from '../../hooks/usePlatform';
import HorizontalScroll from '../HorizontalScroll/HorizontalScroll';
import withAdaptivity from '../../hoc/withAdaptivity';
import { withFrame } from '../../hoc/withFrame';
var CardScroll = withFrame(function (_ref) {
  var children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      sizeX = _ref.sizeX,
      window = _ref.window,
      document = _ref.document,
      restProps = _objectWithoutProperties(_ref, ["children", "className", "size", "sizeX", "window", "document"]);

  var platform = usePlatform();
  var refContainer = useRef(null);
  var gapRef = useRef(null);

  function getScrollToLeft(offset) {
    var containerWidth = refContainer.current.offsetWidth;
    var slideIndex = Array.from(refContainer.current.children).findIndex(function (el) {
      return el.offsetLeft + el.offsetWidth + parseInt(window.getComputedStyle(el).marginRight) - offset >= 0;
    });

    if (slideIndex === -1) {
      return offset;
    }

    if (slideIndex === 0) {
      return 0;
    }

    var slide = refContainer.current.children[slideIndex];
    var scrollTo = slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;

    if (scrollTo <= 2 * gapRef.current.offsetWidth) {
      return 0;
    }

    return scrollTo;
  }

  function getScrollToRight(offset) {
    var containerWidth = refContainer.current.offsetWidth;
    var slide = Array.from(refContainer.current.children).find(function (el) {
      return el.offsetLeft + el.offsetWidth - offset > containerWidth;
    });

    if (!slide) {
      return offset;
    }

    return slide.offsetLeft - gapRef.current.offsetWidth;
  }

  return /*#__PURE__*/React.createElement("div", _extends({}, restProps, {
    className: classNames(className, getClassname('CardScroll', platform), "CardScroll--".concat(size), "CardScroll--sizeX-".concat(sizeX))
  }), /*#__PURE__*/React.createElement(HorizontalScroll, {
    getScrollToLeft: getScrollToLeft,
    getScrollToRight: getScrollToRight,
    showArrows: true
  }, /*#__PURE__*/React.createElement("div", {
    className: "CardScroll__in",
    ref: refContainer
  }, /*#__PURE__*/React.createElement("span", {
    className: "CardScroll__gap",
    ref: gapRef
  }), children, /*#__PURE__*/React.createElement("span", {
    className: "CardScroll__gap"
  }))));
});
CardScroll.defaultProps = {
  size: 's'
};
export default withAdaptivity(CardScroll, {
  sizeX: true
});
//# sourceMappingURL=CardScroll.js.map