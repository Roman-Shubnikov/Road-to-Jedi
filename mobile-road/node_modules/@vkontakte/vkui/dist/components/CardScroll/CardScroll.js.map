{"version":3,"sources":["../../../src/components/CardScroll/CardScroll.tsx"],"names":["React","useRef","classNames","getClassname","usePlatform","HorizontalScroll","withAdaptivity","withFrame","CardScroll","children","className","size","sizeX","window","document","restProps","platform","refContainer","gapRef","getScrollToLeft","offset","containerWidth","current","offsetWidth","slideIndex","Array","from","findIndex","el","offsetLeft","parseInt","getComputedStyle","marginRight","slide","scrollTo","getScrollToRight","find","defaultProps"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, useRef } from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassname from '../../helpers/getClassName';\nimport usePlatform from '../../hooks/usePlatform';\nimport HorizontalScroll from '../HorizontalScroll/HorizontalScroll';\nimport withAdaptivity, { AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { withFrame } from '../../hoc/withFrame';\n\nexport interface CardScrollProps extends HTMLAttributes<HTMLDivElement>, AdaptivityProps {\n  size?: 's' | 'm' | 'l';\n}\n\nconst CardScroll = withFrame<CardScrollProps>(({ children, className, size, sizeX, window, document, ...restProps }) => {\n  const platform = usePlatform();\n\n  const refContainer = useRef<HTMLDivElement>(null);\n  const gapRef = useRef<HTMLDivElement>(null);\n\n  function getScrollToLeft(offset: number): number {\n    const containerWidth = refContainer.current.offsetWidth;\n    const slideIndex = Array\n      .from(refContainer.current.children)\n      .findIndex((el: HTMLElement) => el.offsetLeft + el.offsetWidth + parseInt(window.getComputedStyle(el).marginRight) - offset >= 0);\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    if (slideIndex === 0) {\n      return 0;\n    }\n\n    const slide = refContainer.current.children[slideIndex] as HTMLElement;\n\n    const scrollTo = slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;\n\n    if (scrollTo <= 2 * gapRef.current.offsetWidth) {\n      return 0;\n    }\n\n    return scrollTo;\n  }\n\n  function getScrollToRight(offset: number): number {\n    const containerWidth = refContainer.current.offsetWidth;\n    const slide = Array.from(refContainer.current.children).find((el: HTMLElement) => el.offsetLeft + el.offsetWidth - offset > containerWidth) as HTMLElement;\n\n    if (!slide) {\n      return offset;\n    }\n\n    return slide.offsetLeft - gapRef.current.offsetWidth;\n  }\n\n  return (\n    <div\n      {...restProps}\n      className={classNames(\n        className,\n        getClassname('CardScroll', platform),\n        `CardScroll--${size}`,\n        `CardScroll--sizeX-${sizeX}`,\n      )}\n    >\n      <HorizontalScroll getScrollToLeft={getScrollToLeft} getScrollToRight={getScrollToRight} showArrows={true}>\n        <div className=\"CardScroll__in\" ref={refContainer}>\n          <span className=\"CardScroll__gap\" ref={gapRef} />\n          {children}\n          <span className=\"CardScroll__gap\" />\n        </div>\n      </HorizontalScroll>\n    </div>\n  );\n});\n\nCardScroll.defaultProps = {\n  size: 's',\n};\n\nexport default withAdaptivity(CardScroll, { sizeX: true });\n"],"file":"CardScroll.js"}