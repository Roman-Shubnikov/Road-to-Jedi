{"version":3,"sources":["../../../src/components/Touch/Touch.tsx"],"names":["React","Component","PropTypes","getSupportedEvents","coordX","coordY","touchEnabled","canUseDOM","setRef","events","Touch","e","props","onEnter","onLeave","gesture","startX","startY","startT","Date","isPressed","outputEvent","originalEvent","onStart","onStartX","onStartY","subscribe","document","isX","isY","shiftX","shiftY","shiftXAbs","Math","abs","shiftYAbs","touches","length","onEnd","willBeX","willBeY","willBeSlidedX","onMoveX","onMove","willBeSlidedY","onMoveY","isSlideX","isSlideY","isSlide","onEndY","onEndX","stopClickPropagation","noSlideClick","target","preventClickDefault","tagName","type","unsubscribe","preventDefault","stopPropagation","onClick","container","getRootRef","addEventListener","capture","useCapture","passive","removeEventListener","element","listenerParams","restProps","onDragStart","getRef","children","context","object"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, DragEvent, ElementType, MouseEvent as ReactMouseEvent, RefCallback } from 'react';\nimport PropTypes, { Requireable } from 'prop-types';\nimport {\n  getSupportedEvents,\n  coordX,\n  coordY,\n  touchEnabled,\n  VKUITouchEvent,\n  VKUITouchEventHander,\n} from '../../lib/touch';\nimport { HasRootRef } from '../../types';\nimport { canUseDOM } from '../../lib/dom';\nimport { setRef } from '../../lib/utils';\n\nexport interface TouchProps extends HTMLAttributes<HTMLElement>, HasRootRef<HTMLElement> {\n  onEnter?(outputEvent: MouseEvent): void;\n  onLeave?(outputEvent: MouseEvent): void;\n  onStart?(outputEvent: TouchEvent): void;\n  onStartX?(outputEvent: TouchEvent): void;\n  onStartY?(outputEvent: TouchEvent): void;\n  onMove?(outputEvent: TouchEvent): void;\n  onMoveX?(outputEvent: TouchEvent): void;\n  onMoveY?(outputEvent: TouchEvent): void;\n  onEnd?(outputEvent: TouchEvent): void;\n  onEndX?(outputEvent: TouchEvent): void;\n  onEndY?(outputEvent: TouchEvent): void;\n  useCapture?: boolean;\n  noSlideClick?: boolean;\n  Component?: ElementType;\n}\n\nexport interface TouchContext {\n  document: Requireable<{}>;\n}\n\nexport interface Gesture {\n  startX?: number;\n  startY?: number;\n  startT?: Date;\n  isPressed?: boolean;\n  isY?: boolean;\n  isX?: boolean;\n  isSlideX?: boolean;\n  isSlideY?: boolean;\n  isSlide?: boolean;\n  shiftX?: number;\n  shiftY?: number;\n  shiftXAbs?: number;\n  shiftYAbs?: number;\n}\n\nexport interface TouchEvent extends Gesture {\n  originalEvent: VKUITouchEvent;\n}\n\nexport type TouchEventHandler = (e: TouchEvent) => void;\nexport type ClickHandler = (e: ReactMouseEvent<HTMLElement>) => void;\nexport type DragHandler = (e: DragEvent<HTMLElement>) => void;\n\nconst events = getSupportedEvents();\n\nexport default class Touch extends Component<TouchProps> {\n  preventClickDefault = false;\n  stopClickPropagation = false;\n  gesture: Partial<Gesture> = {};\n  container: HTMLElement;\n\n  static defaultProps: TouchProps = {\n    Component: 'div',\n    children: '',\n    useCapture: false,\n    noSlideClick: false,\n  };\n\n  static contextTypes: TouchContext = {\n    document: PropTypes.object,\n  };\n\n  get document() {\n    return this.context.document || document;\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      this.container.addEventListener(events[0], this.onStart, { capture: this.props.useCapture, passive: false });\n      touchEnabled && this.subscribe(this.container);\n\n      this.container.addEventListener('mouseenter', this.onEnter, { capture: this.props.useCapture, passive: true });\n      this.container.addEventListener('mouseleave', this.onLeave, { capture: this.props.useCapture, passive: true });\n    }\n  }\n\n  componentWillUnmount() {\n    this.container.removeEventListener(events[0], this.onStart);\n    touchEnabled && this.unsubscribe(this.container);\n\n    this.container.removeEventListener('mouseenter', this.onEnter);\n    this.container.removeEventListener('mouseleave', this.onLeave);\n  }\n\n  /**\n   * Обработчик событий mouseenter\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onEnter = (e: MouseEvent) => {\n    if (this.props.onEnter) {\n      this.props.onEnter(e);\n    }\n  };\n\n  /**\n   * Обработчик событий mouseleave\n   *\n   * @param {Object} e Браузерное событие\n   * @param {boolean} simulated флаг, с которым обработчик был вызван симулятивно\n   * @return {void}\n   */\n  onLeave = (e: MouseEvent) => {\n    if (this.props.onLeave) {\n      this.props.onLeave(e);\n    }\n  };\n\n  /**\n   * Обработчик событий touchstart\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onStart: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    this.gesture = {\n      startX: coordX(e),\n      startY: coordY(e),\n      startT: new Date(),\n      isPressed: true,\n    };\n\n    // Вызываем нужные колбеки из props\n    const outputEvent = {\n      ...this.gesture,\n      originalEvent: e,\n    };\n\n    if (this.props.onStart) {\n      this.props.onStart(outputEvent);\n    }\n\n    if (this.props.onStartX) {\n      this.props.onStartX(outputEvent);\n    }\n\n    if (this.props.onStartY) {\n      this.props.onStartY(outputEvent);\n    }\n\n    !touchEnabled && this.subscribe(this.document);\n  };\n\n  /**\n   * Обработчик событий touchmove\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onMove: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    const { isPressed, isX, isY, startX, startY } = this.gesture;\n\n    if (isPressed) {\n      // смещения\n      const shiftX = coordX(e) - startX;\n      const shiftY = coordY(e) - startY;\n\n      // абсолютные значения смещений\n      const shiftXAbs = Math.abs(shiftX);\n      const shiftYAbs = Math.abs(shiftY);\n\n      // Если определяем мультитач, то прерываем жест\n      if (!!e.touches && e.touches.length > 1) {\n        return this.onEnd(e);\n      }\n\n      // если мы ещё не определились\n      if (!isX && !isY) {\n        let willBeX = shiftXAbs >= 5 && shiftXAbs > shiftYAbs;\n        let willBeY = shiftYAbs >= 5 && shiftYAbs > shiftXAbs;\n        let willBeSlidedX = willBeX && !!this.props.onMoveX || !!this.props.onMove;\n        let willBeSlidedY = willBeY && !!this.props.onMoveY || !!this.props.onMove;\n\n        this.gesture.isY = willBeY;\n        this.gesture.isX = willBeX;\n        this.gesture.isSlideX = willBeSlidedX;\n        this.gesture.isSlideY = willBeSlidedY;\n        this.gesture.isSlide = willBeSlidedX || willBeSlidedY;\n      }\n\n      if (this.gesture.isSlide) {\n        this.gesture.shiftX = shiftX;\n        this.gesture.shiftY = shiftY;\n        this.gesture.shiftXAbs = shiftXAbs;\n        this.gesture.shiftYAbs = shiftYAbs;\n\n        // Вызываем нужные колбеки из props\n        const outputEvent: TouchEvent = {\n          ...this.gesture,\n          originalEvent: e,\n        };\n\n        if (this.props.onMove) {\n          this.props.onMove(outputEvent);\n        }\n\n        if (this.gesture.isSlideX && this.props.onMoveX) {\n          this.props.onMoveX(outputEvent);\n        }\n\n        if (this.gesture.isSlideY && this.props.onMoveY) {\n          this.props.onMoveY(outputEvent);\n        }\n      }\n    }\n  };\n\n  /**\n   * Обработчик событий touchend, touchcancel\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onEnd: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    const { isPressed, isSlide, isSlideX, isSlideY } = this.gesture;\n\n    if (isPressed) {\n      // Вызываем нужные колбеки из props\n      const outputEvent: TouchEvent = {\n        ...this.gesture,\n        originalEvent: e,\n      };\n\n      if (this.props.onEnd) {\n        this.props.onEnd(outputEvent);\n      }\n\n      if (isSlideY && this.props.onEndY) {\n        this.props.onEndY(outputEvent);\n      }\n\n      if (isSlideX && this.props.onEndX) {\n        this.props.onEndX(outputEvent);\n      }\n\n      this.stopClickPropagation = this.props.noSlideClick && isSlide;\n    }\n\n    const target = e.target as HTMLElement;\n\n    // Если закончили жест на ссылке, выставляем флаг для отмены перехода\n    this.preventClickDefault = target.tagName === 'A' && isSlide;\n    this.gesture = {};\n\n    // Если это был тач-евент, симулируем отмену hover\n    if (e.type === 'touchend' || e.type === 'touchcancel') {\n      this.onLeave(e);\n    }\n\n    !touchEnabled && this.unsubscribe(this.document);\n  };\n\n  subscribe(element: HTMLElement) {\n    const listenerParams = { capture: this.props.useCapture, passive: false };\n    element.addEventListener(events[1], this.onMove, listenerParams);\n    element.addEventListener(events[2], this.onEnd, listenerParams);\n    element.addEventListener(events[3], this.onEnd, listenerParams);\n  }\n\n  unsubscribe(element: HTMLElement) {\n    // Здесь нужен последний аргумент с такими же параметрами, потому что\n    // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n    // https://github.com/VKCOM/VKUI/issues/444\n    const listenerParams = { capture: this.props.useCapture, passive: false };\n    element.removeEventListener(events[1], this.onMove, listenerParams);\n    element.removeEventListener(events[2], this.onEnd, listenerParams);\n    element.removeEventListener(events[3], this.onEnd, listenerParams);\n  }\n\n  /**\n   * Обработчик событий dragstart\n   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onDragStart: DragHandler = (e: DragEvent<HTMLElement>) => {\n    const target = e.target as HTMLElement;\n    if (target.tagName === 'A' || target.tagName === 'IMG') {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Обработчик клика по компоненту\n   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onClick: ClickHandler = (e: ReactMouseEvent<HTMLElement>) => {\n    if (this.preventClickDefault) {\n      this.preventClickDefault = false;\n      e.preventDefault();\n    }\n    if (this.stopClickPropagation) {\n      this.stopClickPropagation = false;\n      e.stopPropagation();\n      return;\n    }\n    this.props.onClick && this.props.onClick(e);\n  };\n\n  getRef: RefCallback<HTMLElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  render() {\n    const {\n      onStart,\n      onStartX,\n      onStartY,\n      onMove,\n      onMoveX,\n      onMoveY,\n      onLeave,\n      onEnter,\n      onEnd,\n      onEndX,\n      onEndY,\n      useCapture,\n      Component,\n      getRootRef,\n      ...restProps\n    } = this.props;\n\n    return (\n      <Component {...restProps} onDragStart={this.onDragStart} onClick={this.onClick} ref={this.getRef}>\n        {this.props.children}\n      </Component>\n    );\n  }\n}\n"],"file":"Touch.js"}