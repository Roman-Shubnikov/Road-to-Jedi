{"version":3,"sources":["../../../src/components/Group/Group.tsx"],"names":["React","useContext","getClassName","classNames","usePlatform","Separator","hasReactNode","Caption","withAdaptivity","SizeType","ModalRootContext","Group","props","header","description","className","children","separator","getRootRef","mode","sizeX","restProps","isInsideModal","platform","baseClassNames","computedMode","COMPACT","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,cAAP,IAA0CC,QAA1C,QAA0D,0BAA1D;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAoBA,IAAMC,KAAqB,GAAG,SAAxBA,KAAwB,CAACC,KAAD,EAAW;AAAA,MAC/BC,MAD+B,GACgED,KADhE,CAC/BC,MAD+B;AAAA,MACvBC,WADuB,GACgEF,KADhE,CACvBE,WADuB;AAAA,MACVC,SADU,GACgEH,KADhE,CACVG,SADU;AAAA,MACCC,QADD,GACgEJ,KADhE,CACCI,QADD;AAAA,MACWC,SADX,GACgEL,KADhE,CACWK,SADX;AAAA,MACsBC,UADtB,GACgEN,KADhE,CACsBM,UADtB;AAAA,MACkCC,IADlC,GACgEP,KADhE,CACkCO,IADlC;AAAA,MACwCC,KADxC,GACgER,KADhE,CACwCQ,KADxC;AAAA,MACkDC,SADlD,4BACgET,KADhE;;AAAA,oBAEbX,UAAU,CAACS,gBAAD,CAFG;AAAA,MAE/BY,aAF+B,eAE/BA,aAF+B;;AAGvC,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,MAAMoB,cAAc,GAAGtB,YAAY,CAAC,OAAD,EAAUqB,QAAV,CAAnC;AAEA,MAAIE,YAAgC,GAAGN,IAAvC;;AAEA,MAAI,CAACA,IAAL,EAAW;AACTM,IAAAA,YAAY,GAAGL,KAAK,KAAKX,QAAQ,CAACiB,OAAnB,IAA8BJ,aAA9B,GAA8C,OAA9C,GAAwD,MAAvE;AACD;;AAED,sBACE,4CACMD,SADN;AAEE,IAAA,GAAG,EAAEH,UAFP;AAGE,IAAA,SAAS,EAAEf,UAAU,CAACY,SAAD,EAAYS,cAAZ,yBAA4CJ,KAA5C,oBAA+DK,YAA/D;AAHvB,mBAKE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGZ,MADH,EAEGG,QAFH,EAGGV,YAAY,CAACQ,WAAD,CAAZ,iBACD;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC;AAAhC,KAAqCA,WAArC,CADF,CAJF,CALF,EAeGG,SAAS,KAAK,MAAd,iBACC,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEd,UAAU,CAAC,kBAAD,EAAqB;AACxC,iCAA2Bc,SAAS,KAAK;AADD,KAArB,CADvB;AAIE,IAAA,QAAQ,EAAEQ,YAAY,KAAK;AAJ7B,IAhBJ,CADF;AA0BD,CAtCD;;AAwCAd,KAAK,CAACgB,YAAN,GAAqB;AACnBV,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,eAAeT,cAAc,CAACG,KAAD,EAAQ;AAAES,EAAAA,KAAK,EAAE;AAAT,CAAR,CAA7B","sourcesContent":["import React, { FC, HTMLAttributes, ReactNode, useContext } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { HasRootRef } from '../../types';\nimport usePlatform from '../../hooks/usePlatform';\nimport Separator from '../Separator/Separator';\nimport { hasReactNode } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\nimport withAdaptivity, { AdaptivityProps, SizeType } from '../../hoc/withAdaptivity';\nimport ModalRootContext from '../ModalRoot/ModalRootContext';\n\nexport interface GroupProps extends HasRootRef<HTMLDivElement>, HTMLAttributes<HTMLDivElement>, AdaptivityProps {\n  header?: ReactNode;\n  description?: ReactNode;\n  /**\n    show - разделитель всегда показывается,\n    hide – разделитель всегда спрятан,\n    auto – разделитель рисуется автоматически между соседними группами.\n   */\n  separator?: 'show' | 'hide' | 'auto';\n  /**\n   * Режим отображения. Если установлен 'card', выглядит как карточка c\n   * обводкой и внешними отступами. Если 'plain' — без отступов и обводки.\n   * По-умолчанию режим отображения зависит от `sizeX`. В модальных окнах\n   * по умолчанию 'plain'.\n   */\n  mode?: 'plain' | 'card';\n}\n\nconst Group: FC<GroupProps> = (props) => {\n  const { header, description, className, children, separator, getRootRef, mode, sizeX, ...restProps } = props;\n  const { isInsideModal } = useContext(ModalRootContext);\n  const platform = usePlatform();\n  const baseClassNames = getClassName('Group', platform);\n\n  let computedMode: GroupProps['mode'] = mode;\n\n  if (!mode) {\n    computedMode = sizeX === SizeType.COMPACT || isInsideModal ? 'plain' : 'card';\n  }\n\n  return (\n    <section\n      {...restProps}\n      ref={getRootRef}\n      className={classNames(className, baseClassNames, `Group--sizeX-${sizeX}`, `Group--${computedMode}`)}\n    >\n      <div className=\"Group__inner\">\n        {header}\n        {children}\n        {hasReactNode(description) &&\n        <div className=\"Group__description\">\n          <Caption weight=\"regular\" level=\"1\">{description}</Caption>\n        </div>\n        }\n      </div>\n\n      {separator !== 'hide' &&\n        <Separator\n          className={classNames('Group__separator', {\n            'Group__separator--force': separator === 'show',\n          })}\n          expanded={computedMode === 'card'}\n        />\n      }\n    </section>\n  );\n};\n\nGroup.defaultProps = {\n  separator: 'auto',\n};\n\nexport default withAdaptivity(Group, { sizeX: true });\n"],"file":"Group.js"}