import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import React from 'react';
import NativeSelect from '../NativeSelect/NativeSelect';
import CustomSelect from '../CustomSelect/CustomSelect';
import withAdaptivity from '../../hoc/withAdaptivity';

var Select = function Select(_ref) {
  var hasMouse = _ref.hasMouse,
      props = _objectWithoutProperties(_ref, ["hasMouse"]);

  // Use custom select if device has connected a mouse
  if (hasMouse) {
    var children = props.children,
        _restProps = _objectWithoutProperties(props, ["children"]);

    var value = _restProps.hasOwnProperty('value') ? _restProps.value : _restProps.defaultValue;
    return /*#__PURE__*/React.createElement(CustomSelect, _extends({
      value: value
    }, _restProps));
  }

  var options = props.options,
      popupDirection = props.popupDirection,
      renderOption = props.renderOption,
      restProps = _objectWithoutProperties(props, ["options", "popupDirection", "renderOption"]);

  return /*#__PURE__*/React.createElement(NativeSelect, restProps, options.map(function (_ref2) {
    var label = _ref2.label,
        value = _ref2.value;
    return /*#__PURE__*/React.createElement("option", {
      value: value,
      key: "".concat(value)
    }, label);
  }));
};

export default withAdaptivity(Select, {
  hasMouse: true
});
//# sourceMappingURL=Select.js.map