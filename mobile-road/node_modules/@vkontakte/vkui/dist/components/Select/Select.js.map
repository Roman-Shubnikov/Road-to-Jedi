{"version":3,"sources":["../../../src/components/Select/Select.tsx"],"names":["React","NativeSelect","CustomSelect","withAdaptivity","Select","hasMouse","props","children","restProps","value","hasOwnProperty","defaultValue","options","popupDirection","renderOption","map","label"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAgD,8BAAhD;AACA,OAAOC,cAAP,MAAgD,0BAAhD;;AAEA,IAAMC,MAA8D,GAAG,SAAjEA,MAAiE,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACjG;AACA,MAAID,QAAJ,EAAc;AAAA,QACJE,QADI,GACuBD,KADvB,CACJC,QADI;AAAA,QACSC,UADT,4BACuBF,KADvB;;AAGZ,QAAMG,KAAK,GAAGD,UAAS,CAACE,cAAV,CAAyB,OAAzB,IACVF,UAAS,CAACC,KADA,GAEVD,UAAS,CAACG,YAFd;AAIA,wBACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEF;AADT,OAEMD,UAFN,EADF;AAMD;;AAfgG,MAiBzFI,OAjByF,GAiBjCN,KAjBiC,CAiBzFM,OAjByF;AAAA,MAiBhFC,cAjBgF,GAiBjCP,KAjBiC,CAiBhFO,cAjBgF;AAAA,MAiBhEC,YAjBgE,GAiBjCR,KAjBiC,CAiBhEQ,YAjBgE;AAAA,MAiB/CN,SAjB+C,4BAiBjCF,KAjBiC;;AAmBjG,sBACE,oBAAC,YAAD,EAAkBE,SAAlB,EACGI,OAAO,CAACG,GAAR,CAAY;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUP,KAAV,SAAUA,KAAV;AAAA,wBAAsB;AAAQ,MAAA,KAAK,EAAEA,KAAf;AAAsB,MAAA,GAAG,YAAKA,KAAL;AAAzB,OAAwCO,KAAxC,CAAtB;AAAA,GAAZ,CADH,CADF;AAKD,CAxBD;;AA0BA,eAAeb,cAAc,CAACC,MAAD,EAAS;AACpCC,EAAAA,QAAQ,EAAE;AAD0B,CAAT,CAA7B","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport NativeSelect from '../NativeSelect/NativeSelect';\nimport CustomSelect, { CustomSelectProps } from '../CustomSelect/CustomSelect';\nimport withAdaptivity, { AdaptivityProps } from '../../hoc/withAdaptivity';\n\nconst Select: FunctionComponent<CustomSelectProps & AdaptivityProps> = ({ hasMouse, ...props }) => {\n  // Use custom select if device has connected a mouse\n  if (hasMouse) {\n    const { children, ...restProps } = props;\n\n    const value = restProps.hasOwnProperty('value')\n      ? restProps.value\n      : restProps.defaultValue;\n\n    return (\n      <CustomSelect\n        value={value}\n        {...restProps}\n      />\n    );\n  }\n\n  const { options, popupDirection, renderOption, ...restProps } = props;\n\n  return (\n    <NativeSelect {...restProps}>\n      {options.map(({ label, value }) => <option value={value} key={`${value}`}>{label}</option>)}\n    </NativeSelect>\n  );\n};\n\nexport default withAdaptivity(Select, {\n  hasMouse: true,\n});\n"],"file":"Select.js"}