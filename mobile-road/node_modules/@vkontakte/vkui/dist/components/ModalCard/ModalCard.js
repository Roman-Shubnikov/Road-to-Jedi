import React from 'react';
import PanelHeaderButton from '../PanelHeaderButton/PanelHeaderButton';
import getClassName from '../../helpers/getClassName';
import classNames from '../../lib/classNames';
import { Icon24Dismiss } from '@vkontakte/icons';
import { IOS } from '../../lib/platform';
import { hasReactNode } from '../../lib/utils';
import withPlatform from '../../hoc/withPlatform';
import withAdaptivity, { ViewHeight, ViewWidth } from '../../hoc/withAdaptivity';
import Subhead from '../Typography/Subhead/Subhead';
import Title from '../Typography/Title/Title';
import ModalDismissButton from '../ModalDismissButton/ModalDismissButton';

var ModalCard = function ModalCard(props) {
  var icon = props.icon,
      header = props.header,
      subheader = props.subheader,
      children = props.children,
      actions = props.actions,
      actionsLayout = props.actionsLayout,
      onClose = props.onClose,
      platform = props.platform,
      className = props.className,
      viewWidth = props.viewWidth,
      viewHeight = props.viewHeight;
  var isDesktop = viewWidth >= ViewWidth.SMALL_TABLET && viewHeight >= ViewHeight.MEDIUM;
  var canShowCloseBtn = viewWidth >= ViewWidth.SMALL_TABLET;
  var canShowCloseBtnIos = platform === IOS && !canShowCloseBtn;
  return /*#__PURE__*/React.createElement("div", {
    className: classNames(getClassName('ModalCard', platform), {
      'ModalCard--desktop': isDesktop
    }, className)
  }, /*#__PURE__*/React.createElement("div", {
    className: "ModalCard__in"
  }, /*#__PURE__*/React.createElement("div", {
    className: "ModalCard__container"
  }, hasReactNode(icon) && /*#__PURE__*/React.createElement("div", {
    className: "ModalCard__icon"
  }, icon), hasReactNode(header) && /*#__PURE__*/React.createElement(Title, {
    level: "2",
    weight: "semibold",
    className: "ModalCard__header"
  }, header), hasReactNode(subheader) && /*#__PURE__*/React.createElement(Subhead, {
    weight: "regular",
    className: "ModalCard__subheader"
  }, subheader), children, hasReactNode(actions) && /*#__PURE__*/React.createElement("div", {
    className: classNames('ModalCard__actions', {
      'ModalCard__actions--v': actionsLayout === 'vertical'
    })
  }, actions), canShowCloseBtn && /*#__PURE__*/React.createElement(ModalDismissButton, {
    onClick: onClose
  }), canShowCloseBtnIos && /*#__PURE__*/React.createElement(PanelHeaderButton, {
    className: "ModalCard__dismiss",
    onClick: onClose
  }, /*#__PURE__*/React.createElement(Icon24Dismiss, null)))));
};

ModalCard.defaultProps = {
  actionsLayout: 'horizontal'
};
export default withAdaptivity(withPlatform(ModalCard), {
  viewWidth: true,
  viewHeight: true
});
//# sourceMappingURL=ModalCard.js.map