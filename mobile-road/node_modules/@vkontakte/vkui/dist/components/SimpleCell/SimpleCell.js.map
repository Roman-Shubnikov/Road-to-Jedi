{"version":3,"sources":["../../../src/components/SimpleCell/SimpleCell.tsx"],"names":["React","classNames","getClassName","Tappable","Icon24Chevron","IOS","usePlatform","hasReactNode","withAdaptivity","SimpleCell","before","indicator","children","after","description","className","expandable","multiline","Component","onClick","sizeY","restProps","platform","hasAfter","RootComponent","disabled","props","href","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkE,OAAlE;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,cAAP,MAAgD,0BAAhD;;AAiCA,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,OAalC;AAAA,MAZJC,MAYI,QAZJA,MAYI;AAAA,MAXJC,SAWI,QAXJA,SAWI;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,SACC;;AACJ,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAMiB,QAAQ,GAAGhB,YAAY,CAACM,KAAD,CAAZ,IAAuBG,UAAU,IAAIM,QAAQ,KAAKjB,GAAnE;AACA,MAAMmB,aAAa,GAAGH,SAAS,CAACI,QAAV,GAAqBP,SAArB,GAAiCf,QAAvD;AAEA,MAAMuB,KAAsB,GAAGL,SAA/B;;AAEA,MAAI,CAACA,SAAS,CAACI,QAAf,EAAyB;AACvBC,IAAAA,KAAK,CAACR,SAAN,GAAkBG,SAAS,CAACM,IAAV,GAAiB,GAAjB,GAAuBT,SAAzC;AACAQ,IAAAA,KAAK,CAACP,OAAN,GAAgBA,OAAhB;AACD;;AAED,sBACE,oBAAC,aAAD,eACMO,KADN;AAEE,IAAA,SAAS,EACPzB,UAAU,CACRc,SADQ,EAERb,YAAY,CAAC,YAAD,EAAeoB,QAAf,CAFJ,EAGR;AACE,yBAAmBN,UADrB;AAEE,0BAAoBC;AAFtB,KAHQ,8BAOaG,KAPb;AAHd,MAcGV,MAdH,eAeE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCE,QAAvC,CADF,EAEGE,WAAW,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0CA,WAA1C,CAFlB,CAfF,EAmBGP,YAAY,CAACI,SAAD,CAAZ,iBACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,SADH,CApBJ,EAwBGY,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC;AAAf,KACGV,KADH,EAEGG,UAAU,IAAIM,QAAQ,KAAKjB,GAA3B,iBAAkC,oBAAC,aAAD,OAFrC,CAzBJ,CADF;AAiCD,CA1DD;;AA4DAI,UAAU,CAACmB,YAAX,GAA0B;AACxBV,EAAAA,SAAS,EAAE;AADa,CAA1B;AAIA,eAAeV,cAAc,CAACC,UAAD,EAAa;AAAEW,EAAAA,KAAK,EAAE;AAAT,CAAb,CAA7B","sourcesContent":["import React, { HTMLAttributes, ReactNode, FC, ElementType } from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport { Icon24Chevron } from '@vkontakte/icons';\nimport { HasLinkProps, HasRootRef } from '../../types';\nimport { IOS } from '../../lib/platform';\nimport usePlatform from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport withAdaptivity, { AdaptivityProps } from '../../hoc/withAdaptivity';\n\nexport interface SimpleCellOwnProps extends HasLinkProps {\n  /**\n   * Иконка 28 или `<Avatar size={28|32|40|48|72} />`\n   */\n  before?: ReactNode;\n  /**\n   * Контейнер для текста справа от `children`.\n   */\n  indicator?: ReactNode;\n  /**\n   * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.\n   */\n  after?: ReactNode;\n  /**\n   * Контейнер для текста под `children`.\n   */\n  description?: ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  /**\n   * В iOS добавляет chevron справа. Передавать `true`, если предполагается переход при клике по ячейке.\n   */\n  expandable?: boolean;\n  multiline?: boolean;\n  Component?: ElementType;\n}\n\nexport interface SimpleCellProps extends SimpleCellOwnProps, HTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, AdaptivityProps {}\n\nconst SimpleCell: FC<SimpleCellProps> = ({\n  before,\n  indicator,\n  children,\n  after,\n  description,\n  className,\n  expandable,\n  multiline,\n  Component,\n  onClick,\n  sizeY,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n  const hasAfter = hasReactNode(after) || expandable && platform === IOS;\n  const RootComponent = restProps.disabled ? Component : Tappable;\n\n  const props: SimpleCellProps = restProps;\n\n  if (!restProps.disabled) {\n    props.Component = restProps.href ? 'a' : Component;\n    props.onClick = onClick;\n  }\n\n  return (\n    <RootComponent\n      {...props}\n      className={\n        classNames(\n          className,\n          getClassName('SimpleCell', platform),\n          {\n            'SimpleCell--exp': expandable,\n            'SimpleCell--mult': multiline,\n          },\n          `SimpleCell--sizeY-${sizeY}`,\n        )\n      }\n    >\n      {before}\n      <div className=\"SimpleCell__main\">\n        <div className=\"SimpleCell__children\">{children}</div>\n        {description && <div className=\"SimpleCell__description\">{description}</div>}\n      </div>\n      {hasReactNode(indicator) &&\n        <div className=\"SimpleCell__indicator\">\n          {indicator}\n        </div>\n      }\n      {hasAfter &&\n        <div className=\"SimpleCell__after\">\n          {after}\n          {expandable && platform === IOS && <Icon24Chevron />}\n        </div>\n      }\n    </RootComponent>\n  );\n};\n\nSimpleCell.defaultProps = {\n  Component: 'div',\n};\n\nexport default withAdaptivity(SimpleCell, { sizeY: true });\n"],"file":"SimpleCell.js"}