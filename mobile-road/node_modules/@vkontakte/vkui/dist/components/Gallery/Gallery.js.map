{"version":3,"sources":["../../../src/components/Gallery/Gallery.tsx"],"names":["React","Children","Component","useCallback","useEffect","useState","getClassName","Touch","classNames","withPlatform","canUseDOM","setRef","withFrame","withAdaptivity","HorizontalScrollArrow","BaseGallery","props","e","setState","animation","startT","isDraggable","isFullyVisible","originalEvent","preventDefault","isSlideX","onDragStart","state","deltaX","shiftX","dragging","targetIndex","isSlide","getTarget","slideIndex","onDragEnd","onChange","onEnd","initializeSlides","canSlideLeft","canSlideRight","id","slide","slidesStore","viewport","getRef","container","getRootRef","containerWidth","slides","duration","options","map","children","_item","i","elem","coordX","offsetLeft","width","offsetWidth","layerWidth","reduce","val","min","calcMin","max","calcMax","calculateIndent","isValidShift","validateIndent","window","requestAnimationFrame","viewportWidth","align","isCenterWithCustomWidth","length","targetSlide","indent","Number","value","expectDeltaX","Date","now","getTime","shift","direction","item","index","previousValue","Math","abs","currentValue","addEventListener","onResize","prevProps","widthChanged","slideWidth","isPropUpdate","slideCountChanged","count","isCustomWidth","removeEventListener","bullets","className","platform","hasMouse","showArrows","restProps","calculateDragIndent","layerStyle","WebkitTransform","transform","WebkitTransition","transition","onStart","onMoveX","getViewportRef","getSlideRef","slideLeft","slideRight","BaseGalleryAdaptive","Gallery","initialSlideIndex","timeout","localSlideIndex","setSlideIndex","isControlled","Boolean","toArray","filter","childCount","handleChange","current","undefined","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React, { Children, Component, HTMLAttributes, ReactElement, RefCallback, useCallback, useEffect, useState } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport Touch, { TouchEventHandler, TouchEvent } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasAlign, HasPlatform, HasRef, HasRootRef } from '../../types';\nimport { canUseDOM } from '../../lib/dom';\nimport { setRef } from '../../lib/utils';\nimport { withFrame, FrameProps } from '../../hoc/withFrame';\nimport withAdaptivity, { AdaptivityProps } from '../../hoc/withAdaptivity';\nimport HorizontalScrollArrow from '../HorizontalScroll/HorizontalScrollArrow';\n\nexport interface BaseGalleryProps extends\n  Omit<HTMLAttributes<HTMLDivElement>, 'onChange' | 'onDragStart' | 'onDragEnd'>,\n  HasPlatform,\n  HasAlign,\n  HasRootRef<HTMLDivElement>,\n  HasRef<HTMLElement> {\n  slideWidth?: string | number;\n  slideIndex?: number;\n  onDragStart?: TouchEventHandler;\n  onDragEnd?: TouchEventHandler;\n  onChange?(current: number): void;\n  onEnd?({ targetIndex }: { targetIndex: number }): void;\n  bullets?: 'dark' | 'light' | false;\n  isDraggable?: boolean;\n  showArrows?: boolean;\n}\n\nexport interface GalleryProps extends BaseGalleryProps {\n  initialSlideIndex?: number;\n  timeout?: number;\n}\n\nexport interface GalleryState {\n  containerWidth: number;\n  layerWidth?: number;\n  min?: number;\n  max?: number;\n  startT?: Date;\n  deltaX: number;\n  shiftX: number;\n  slides: GallerySlidesState[];\n  animation: boolean;\n  duration: number;\n  dragging?: boolean;\n}\n\nexport interface GallerySlidesState {\n  coordX: number;\n  width: number;\n}\n\ntype GetSlideRef = (index: number) => RefCallback<HTMLElement>;\n\nclass BaseGallery extends Component<BaseGalleryProps & FrameProps & AdaptivityProps, GalleryState> {\n  constructor(props: GalleryProps) {\n    super(props);\n\n    this.state = {\n      containerWidth: 0,\n      deltaX: 0,\n      shiftX: 0,\n      slides: [],\n      animation: true,\n      duration: 0.24,\n    };\n\n    this.slidesStore = {};\n  }\n\n  container: HTMLDivElement;\n  slidesStore: {\n    [index: string]: HTMLElement;\n  };\n  viewport: HTMLElement;\n\n  static defaultProps: Partial<BaseGalleryProps> = {\n    slideWidth: '100%',\n    children: '',\n    align: 'left',\n    bullets: false,\n    isDraggable: true,\n  };\n\n  get isCenterWithCustomWidth() {\n    return this.props.slideWidth === 'custom' && this.props.align === 'center';\n  }\n\n  initializeSlides(options: { animation?: boolean } = {}) {\n    const slides: GallerySlidesState[] = React.Children.map(\n      this.props.children,\n      (_item: ReactElement, i: number): GallerySlidesState => {\n        const elem = this.slidesStore[`slide-${i}`];\n        return {\n          coordX: elem.offsetLeft,\n          width: elem.offsetWidth,\n        };\n      });\n\n    const containerWidth = this.container.offsetWidth;\n    const layerWidth = slides.reduce((val: number, slide: GallerySlidesState) => slide.width + val, 0);\n\n    const min = this.calcMin({ containerWidth, layerWidth, slides });\n    const max = this.calcMax({ slides });\n\n    this.setState({ min, max, layerWidth, containerWidth, slides }, () => {\n      const shiftX = this.calculateIndent(this.props.slideIndex);\n      if (this.state.shiftX === shiftX) {\n        return;\n      }\n      const isValidShift = this.state.shiftX === this.validateIndent(this.state.shiftX);\n      const { animation = isValidShift } = options;\n      this.setState({ shiftX, animation }, () => {\n        if (!this.state.animation) {\n          this.props.window.requestAnimationFrame(() => this.setState({ animation: true }));\n        }\n      });\n    });\n  }\n\n  calcMin({ containerWidth, layerWidth, slides }: Pick<GalleryState, 'containerWidth' | 'layerWidth' | 'slides'>) {\n    const viewportWidth = this.viewport.offsetWidth;\n    switch (this.props.align) {\n      case 'left':\n        return containerWidth - layerWidth;\n      case 'right':\n        return viewportWidth - layerWidth;\n      case 'center':\n        if (this.isCenterWithCustomWidth && slides.length) {\n          const { coordX, width } = slides[slides.length - 1];\n          return viewportWidth / 2 - coordX - width / 2;\n        } else {\n          return viewportWidth - (containerWidth - viewportWidth) / 2 - layerWidth;\n        }\n    }\n  }\n\n  calcMax({ slides }: Pick<GalleryState, 'slides'>) {\n    const viewportWidth = this.viewport.offsetWidth;\n    if (this.isCenterWithCustomWidth && slides.length) {\n      const { width, coordX } = slides[0];\n      return viewportWidth / 2 - coordX - width / 2;\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n   * Считает отступ слоя галереи\n   */\n  calculateIndent(targetIndex: number) {\n    const { slides } = this.state;\n\n    if (this.isFullyVisible) {\n      return 0;\n    }\n\n    const targetSlide = slides.length ? slides[targetIndex] : null;\n\n    if (targetSlide) {\n      const { coordX, width } = targetSlide;\n\n      if (this.isCenterWithCustomWidth) {\n        const viewportWidth = this.viewport.offsetWidth;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return this.validateIndent(-1 * coordX);\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n  calculateDragIndent() {\n    const { shiftX, deltaX, min, max } = this.state;\n    const indent = shiftX + deltaX;\n\n    if (indent > max) {\n      return max + Number((indent - max) / 3);\n    } else if (indent < min) {\n      return min + Number((indent - min) / 3);\n    }\n\n    return indent;\n  }\n\n  validateIndent(value: number) {\n    const { min, max } = this.state;\n\n    if (value < min) {\n      return min;\n    } else if (value > max) {\n      return max;\n    }\n\n    return value;\n  }\n\n  get isFullyVisible() {\n    return this.state.layerWidth <= this.state.containerWidth;\n  }\n\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n  getTarget() {\n    const { slides, deltaX, shiftX, startT, max } = this.state;\n    const { slideIndex } = this.props;\n    const expectDeltaX = deltaX / (Date.now() - startT.getTime()) * 240 * 0.6;\n    const shift = shiftX + deltaX + expectDeltaX - max;\n    const direction = deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    let targetIndex = slides.reduce((val: number, item: GallerySlidesState, index: number) => {\n      const previousValue = Math.abs(slides[val].coordX + shift);\n      const currentValue = Math.abs(item.coordX + shift);\n\n      return previousValue < currentValue ? val : index;\n    }, slideIndex);\n\n    if (targetIndex === slideIndex) {\n      let targetSlide = slideIndex + direction;\n\n      if (targetSlide >= 0 && targetSlide < slides.length) {\n        if (Math.abs(deltaX) > slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  }\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    this.setState({\n      animation: false,\n      startT: e.startT,\n    });\n  };\n\n  onMoveX: TouchEventHandler = (e: TouchEvent) => {\n    if (this.props.isDraggable && !this.isFullyVisible) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        this.props.onDragStart && this.props.onDragStart(e);\n\n        if (this.state.deltaX !== e.shiftX || this.state.dragging !== e.isSlideX) {\n          this.setState({\n            deltaX: e.shiftX,\n            dragging: e.isSlideX,\n          });\n        }\n      }\n    }\n  };\n\n  onEnd: TouchEventHandler = (e: TouchEvent) => {\n    const targetIndex = e.isSlide ? this.getTarget() : this.props.slideIndex;\n    this.props.onDragEnd && this.props.onDragEnd(e);\n    this.setState({ deltaX: 0, animation: true }, () => this.props.onChange(targetIndex));\n\n    if (this.props.onEnd) {\n      this.props.onEnd({ targetIndex });\n    }\n  };\n\n  onResize: VoidFunction = () => this.initializeSlides({ animation: false });\n\n  get canSlideLeft() {\n    return !this.isFullyVisible && this.props.slideIndex > 0;\n  }\n\n  get canSlideRight() {\n    return !this.isFullyVisible && this.props.slideIndex < this.state.slides.length - 1;\n  }\n\n  slideLeft = () => {\n    const { slideIndex, onChange } = this.props;\n    if (this.canSlideLeft) {\n      this.setState({ deltaX: 0, animation: true }, () => onChange(slideIndex - 1));\n    }\n  };\n\n  slideRight = () => {\n    const { slideIndex, onChange } = this.props;\n    if (this.canSlideRight) {\n      this.setState({ deltaX: 0, animation: true }, () => onChange(slideIndex + 1));\n    }\n  };\n\n  getSlideRef: GetSlideRef = (id: number) => (slide) => {\n    this.slidesStore[`slide-${id}`] = slide;\n  };\n\n  getViewportRef: RefCallback<HTMLElement> = (viewport) => {\n    this.viewport = viewport;\n    setRef(viewport, this.props.getRef);\n  };\n\n  getRootRef: RefCallback<HTMLDivElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  componentDidMount() {\n    this.initializeSlides({ animation: false });\n    this.props.window.addEventListener('resize', this.onResize);\n  }\n\n  componentDidUpdate(prevProps: GalleryProps) {\n    const widthChanged = this.props.slideWidth !== prevProps.slideWidth;\n    const isPropUpdate = this.props !== prevProps;\n    const slideCountChanged = Children.count(this.props.children) !== Children.count(prevProps.children);\n    const isCustomWidth = this.props.slideWidth === 'custom';\n\n    // в любом из этих случаев позиция могла поменяться\n    if (widthChanged || slideCountChanged || isCustomWidth && isPropUpdate) {\n      this.initializeSlides();\n    } else if (this.props.slideIndex !== prevProps.slideIndex) {\n      this.setState({\n        animation: true,\n        deltaX: 0,\n        shiftX: this.calculateIndent(this.props.slideIndex),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.window.removeEventListener('resize', this.onResize);\n  }\n\n  render() {\n    const { animation, duration, dragging } = this.state;\n    const {\n      children,\n      slideWidth,\n      slideIndex,\n      isDraggable,\n      onDragStart,\n      onDragEnd,\n      onChange,\n      onEnd,\n      align,\n      bullets,\n      className,\n      platform,\n      hasMouse,\n      showArrows,\n      ...restProps\n    } = this.props;\n\n    const indent = dragging ? this.calculateDragIndent() : this.calculateIndent(slideIndex);\n\n    const layerStyle = {\n      WebkitTransform: `translateX(${indent}px)`,\n      transform: `translateX(${indent}px)`,\n      WebkitTransition: animation ? `-webkit-transform ${duration}s cubic-bezier(.1, 0, .25, 1)` : 'none',\n      transition: animation ? `transform ${duration}s cubic-bezier(.1, 0, .25, 1)` : 'none',\n    };\n\n    return (\n      <div {...restProps} className={classNames(getClassName('Gallery', platform), className, `Gallery--${align}`, {\n        'Gallery--dragging': dragging,\n        'Gallery--custom-width': slideWidth === 'custom',\n      })} ref={this.getRootRef}>\n        <Touch\n          className=\"Gallery__viewport\"\n          onStartX={this.onStart}\n          onMoveX={this.onMoveX}\n          onEnd={this.onEnd}\n          noSlideClick\n          style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n          getRootRef={this.getViewportRef}\n        >\n          <div className=\"Gallery__layer\" style={layerStyle}>\n            {React.Children.map(children, (item: ReactElement, i: number) =>\n              <div className=\"Gallery__slide\" key={`slide-${i}`} ref={this.getSlideRef(i)}>{item}</div>,\n            )}\n          </div>\n        </Touch>\n\n        {bullets &&\n        <div className={classNames('Gallery__bullets', `Gallery__bullets--${bullets}`)}>\n          {React.Children.map(children, (_item: ReactElement, index: number) =>\n            <div\n              className={classNames('Gallery__bullet', { 'Gallery__bullet--active': index === slideIndex })}\n              key={index}\n            />,\n          )}\n        </div>\n        }\n\n        {showArrows && hasMouse && this.canSlideLeft && <HorizontalScrollArrow direction=\"left\" onClick={this.slideLeft} />}\n        {showArrows && hasMouse && this.canSlideRight && <HorizontalScrollArrow direction=\"right\" onClick={this.slideRight} />}\n      </div>\n    );\n  }\n}\n\nconst BaseGalleryAdaptive = withAdaptivity(BaseGallery, {\n  hasMouse: true,\n});\n\nconst Gallery = withFrame<GalleryProps>(({\n  initialSlideIndex = 0,\n  children,\n  timeout,\n  onChange,\n  ...props\n}) => {\n  const [localSlideIndex, setSlideIndex] = useState(initialSlideIndex);\n  const isControlled = typeof props.slideIndex === 'number';\n  const slideIndex = isControlled ? props.slideIndex : localSlideIndex;\n  const isDraggable = !isControlled || Boolean(onChange);\n  const slides = React.Children.toArray(children).filter((item) => Boolean(item));\n  const childCount = slides.length;\n\n  const handleChange: GalleryProps['onChange'] = useCallback((current) => {\n    if (current === slideIndex) {\n      return;\n    }\n    !isControlled && setSlideIndex(current);\n    onChange && onChange(current);\n  }, [onChange, slideIndex]);\n  // autoplay\n  useEffect(() => {\n    if (!timeout || !canUseDOM) {\n      return undefined;\n    }\n    const id = props.window.setTimeout(() => handleChange((slideIndex + 1) % childCount), timeout);\n    return () => props.window.clearTimeout(id);\n  }, [timeout, slideIndex, childCount]);\n  // prevent overflow\n  useEffect(() => handleChange(Math.min(slideIndex, childCount - 1)), [childCount]);\n\n  return (\n    <BaseGalleryAdaptive\n      slideIndex={slideIndex}\n      isDraggable={isDraggable}\n      {...props}\n      onChange={handleChange}\n    >{slides}</BaseGalleryAdaptive>\n  );\n});\n\nexport default withPlatform(Gallery);\n"],"file":"Gallery.js"}