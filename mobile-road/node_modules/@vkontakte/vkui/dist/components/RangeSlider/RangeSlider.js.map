{"version":3,"sources":["../../../src/components/RangeSlider/RangeSlider.tsx"],"names":["React","Component","createRef","Touch","getClassName","classNames","precisionRound","withPlatform","canUseDOM","setRef","withAdaptivity","RangeSlider","props","e","boundingRect","container","getBoundingClientRect","setState","containerWidth","width","absolutePosition","validateAbsolute","startX","left","percentPosition","absoluteToPecent","calcPercentRange","percentStart","percentEnd","onChange","percentToValue","isControlledOutside","state","shiftX","originalEvent","preventDefault","getRootRef","hasOwnProperty","thumbStart","thumbEnd","value","absolute","res","Math","max","min","step","stepCount","absStep","floor","percent","abs","stepFloatPart","split","length","valueStart","valueEnd","validatePercent","valueToPercent","prevProps","className","defaultValue","platform","sizeY","restProps","getRef","onStart","onMoveX"],"mappings":"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","sourcesContent":["import React, { Component, createRef, HTMLAttributes, RefObject, RefCallback } from 'react';\nimport Touch, { TouchEvent, TouchEventHandler } from '../Touch/Touch';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { HasPlatform, HasRootRef } from '../../types';\nimport { precisionRound } from '../Slider/Slider';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\nimport { setRef } from '../../lib/utils';\nimport withAdaptivity, { AdaptivityProps } from '../../hoc/withAdaptivity';\n\nexport type Value = [number, number];\n\nexport interface RangeSliderProps extends\n  HasRootRef<HTMLDivElement>,\n  HasPlatform,\n  Omit<HTMLAttributes<HTMLDivElement>, 'value' | 'defaultValue' | 'onChange'>,\n  AdaptivityProps {\n  min?: number;\n  max?: number;\n  step?: number;\n  value?: Value;\n  defaultValue?: Value;\n  onChange?(value: Value, e: TouchEvent): void;\n}\n\nexport interface RangeSliderState {\n  startX: number;\n  percentStart: number;\n  percentEnd: number;\n  containerWidth: number;\n}\n\nclass RangeSlider extends Component<RangeSliderProps, RangeSliderState> {\n  constructor(props: RangeSliderProps) {\n    super(props);\n    this.state = {\n      startX: 0,\n      percentStart: 0,\n      percentEnd: 0,\n      containerWidth: 0,\n    };\n    this.isControlledOutside = this.props.hasOwnProperty('value');\n    this.thumbStart = createRef();\n    this.thumbEnd = createRef();\n  }\n\n  static defaultProps: RangeSliderProps = {\n    min: 0,\n    max: 100,\n    step: 0,\n  };\n\n  isControlledOutside: boolean;\n\n  container: HTMLDivElement;\n\n  thumbStart: RefObject<HTMLDivElement>;\n  thumbEnd: RefObject<HTMLDivElement>;\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    const boundingRect = this.container.getBoundingClientRect();\n    this.setState({\n      containerWidth: boundingRect.width,\n    }, () => {\n      const absolutePosition = this.validateAbsolute(e.startX - boundingRect.left);\n      const percentPosition = this.absoluteToPecent(absolutePosition);\n      const { percentStart, percentEnd } = this.calcPercentRange(percentPosition);\n\n      this.onChange([this.percentToValue(percentStart), this.percentToValue(percentEnd)], e);\n\n      if (this.isControlledOutside) {\n        this.setState({ startX: absolutePosition });\n      } else {\n        this.setState({\n          startX: absolutePosition,\n          percentStart,\n          percentEnd,\n        });\n      }\n    });\n  };\n\n  onMoveX: TouchEventHandler = (e: TouchEvent) => {\n    const absolutePosition = this.validateAbsolute(this.state.startX + (e.shiftX || 0));\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n    const { percentStart, percentEnd } = this.calcPercentRange(percentPosition);\n\n    this.onChange([this.percentToValue(percentStart), this.percentToValue(percentEnd)], e);\n\n    if (!this.isControlledOutside) {\n      this.setState({\n        percentStart,\n        percentEnd,\n      });\n    }\n\n    e.originalEvent.preventDefault();\n  };\n\n  onChange(value: Value, e: TouchEvent) {\n    this.props.onChange && this.props.onChange(value, e);\n  }\n\n  validateAbsolute(absolute: number) {\n    let res = Math.max(0, Math.min(absolute, this.state.containerWidth));\n\n    if (this.props.step > 0) {\n      const stepCount = (this.props.max - this.props.min) / this.props.step;\n      const absStep = this.state.containerWidth / stepCount;\n\n      res = Math.floor(res / absStep) * absStep;\n    }\n\n    return res;\n  }\n\n  validatePercent({ percentStart, percentEnd }: { percentStart: number; percentEnd: number }) {\n    return {\n      percentStart: Math.max(0, Math.min(percentStart, 100)),\n      percentEnd: Math.max(0, Math.min(percentEnd, 100)),\n    };\n  }\n\n  absoluteToPecent(absolute: number) {\n    return absolute * 100 / this.state.containerWidth;\n  }\n\n  calcPercentRange(percent: number) {\n    const { percentStart, percentEnd } = this.state;\n\n    if (percentStart === 100) {\n      return { percentStart: percent, percentEnd };\n    } else if (percentEnd === 0) {\n      return { percentEnd: percent, percentStart };\n    } else if (Math.abs(percentStart - percent) <= Math.abs(percentEnd - percent)) {\n      return { percentStart: percent, percentEnd };\n    } else {\n      return { percentEnd: percent, percentStart };\n    }\n  }\n\n  percentToValue(percent: number) {\n    const res = percent * (this.props.max - this.props.min) / 100 + this.props.min;\n    if (this.props.step > 0) {\n      const stepFloatPart = `${this.props.step}`.split('.')[1] || '';\n      return precisionRound(res, stepFloatPart.length);\n    }\n    return res;\n  }\n\n  valueToPercent([valueStart, valueEnd]: Value) {\n    return {\n      percentStart: (valueStart - this.props.min) * 100 / (this.props.max - this.props.min),\n      percentEnd: (valueEnd - this.props.min) * 100 / (this.props.max - this.props.min),\n    };\n  }\n\n  get value(): Value {\n    if (this.isControlledOutside) {\n      return this.props.value;\n    } else if (this.props.hasOwnProperty('defaultValue')) {\n      return this.props.defaultValue;\n    } else {\n      return [this.props.min, this.props.max];\n    }\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      const boundingRect = this.container.getBoundingClientRect();\n      this.setState({\n        containerWidth: boundingRect.width,\n      }, () => {\n        this.setState(this.validatePercent(this.valueToPercent(this.value)));\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: RangeSliderProps) {\n    if (this.isControlledOutside && prevProps.value !== this.props.value) {\n      this.setState(this.validatePercent(this.valueToPercent(this.props.value)));\n    }\n  }\n\n  getRef: RefCallback<HTMLDivElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  render() {\n    const { className, min, max, step, value, defaultValue,\n      onChange, getRootRef, platform, sizeY, ...restProps } = this.props;\n\n    return (\n      <div\n        {...restProps}\n        className={classNames(getClassName('Slider', platform), className, `Slider--sizeY-${sizeY}`)}\n      >\n        <Touch getRootRef={this.getRef} onStart={this.onStart} onMoveX={this.onMoveX} className=\"Slider__in\">\n          <div\n            className=\"Slider__dragger\"\n            style={{\n              width: `${this.state.percentEnd - this.state.percentStart}%`,\n              left: `${this.state.percentStart}%`,\n            }}\n          >\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--start')}\n              ref={this.thumbStart}\n            />\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--end')}\n              ref={this.thumbEnd}\n            />\n          </div>\n        </Touch>\n      </div>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(RangeSlider), {\n  sizeY: true,\n});\n"],"file":"RangeSlider.js"}