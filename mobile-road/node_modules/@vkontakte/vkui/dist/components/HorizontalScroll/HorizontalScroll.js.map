{"version":3,"sources":["../../../src/components/HorizontalScroll/HorizontalScroll.tsx"],"names":["React","useRef","useEffect","useState","useCallback","classNames","usePlatform","getClassName","withAdaptivity","HorizontalScrollArrow","easeInOutSine","x","Math","cos","PI","now","performance","Date","SCROLL_ONE_FRAME_TIME","doScroll","scrollElement","getScrollPosition","animationQueue","onScrollToRightBorder","onScrollEnd","onScrollStart","initialScrollWidth","scrollAnimationDuration","maxLeft","offsetWidth","startLeft","scrollLeft","endLeft","startTime","scroll","time","elapsed","min","value","currentLeft","ceil","max","requestAnimationFrame","shift","length","HorizontalScroll","props","children","getScrollToLeft","getScrollToRight","showArrows","className","hasMouse","restProps","canScrollLeft","setCanScrollLeft","canScrollRight","setCanScrollRight","setInitialScrollWidth","isCustomScrollingRef","scrollerRef","platform","scrollTo","current","push","onscroll","scrollWidth","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, useRef, useEffect, useState, useCallback, FC } from 'react';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassName from '../../helpers/getClassName';\nimport withAdaptivity, { AdaptivityProps } from '../../hoc/withAdaptivity';\nimport HorizontalScrollArrow from './HorizontalScrollArrow';\n\ntype GetScrollPositionCallback = (currentPosition: number) => number;\ntype Callback = () => void;\ntype ScrollContext = {\n  scrollElement: HTMLElement | null;\n  scrollAnimationDuration: number;\n  animationQueue: Callback[];\n  getScrollPosition: GetScrollPositionCallback;\n  onScrollToRightBorder: Callback;\n  onScrollEnd: Callback;\n  onScrollStart: Callback;\n  /**\n   * Начальная ширина прокрутки.\n   * В некоторых случаях может отличаться от текущей ширины прокрутки из-за transforms: translate\n   */\n  initialScrollWidth: number;\n};\n\ninterface HorizontalScrollProps extends HTMLAttributes<HTMLDivElement>, AdaptivityProps {\n  getScrollToLeft?: GetScrollPositionCallback;\n  getScrollToRight?: GetScrollPositionCallback;\n  showArrows?: boolean;\n  scrollAnimationDuration?: number;\n}\n\n/**\n * ease function\n * @param x absolute progress of the animation in bounds 0 (beginning) and 1 (end)\n */\nfunction easeInOutSine(x: number) {\n  return 0.5 * (1 - Math.cos(Math.PI * x));\n}\n\n/**\n * timing method\n */\nfunction now() {\n  return performance && performance.now ? performance.now() : Date.now();\n}\n\n/**\n * Код анимации скрола, на основе полифила: https://github.com/iamdustan/smoothscroll\n * Константа взята из полифила (468), на дизайн-ревью уточнили до 250\n * @var {number} SCROLL_ONE_FRAME_TIME время анимации скролла\n */\nconst SCROLL_ONE_FRAME_TIME = 250;\n\nfunction doScroll({\n  scrollElement,\n  getScrollPosition,\n  animationQueue,\n  onScrollToRightBorder,\n  onScrollEnd,\n  onScrollStart,\n  initialScrollWidth,\n  scrollAnimationDuration = SCROLL_ONE_FRAME_TIME,\n}: ScrollContext) {\n  if (!scrollElement || !getScrollPosition) {\n    return;\n  }\n\n  /**\n   * максимальное значение сдвига влево\n   */\n  const maxLeft = initialScrollWidth - scrollElement.offsetWidth;\n\n  let startLeft = scrollElement.scrollLeft;\n  let endLeft = getScrollPosition(startLeft);\n\n  onScrollStart();\n\n  if (endLeft >= maxLeft) {\n    onScrollToRightBorder();\n    endLeft = maxLeft;\n  }\n\n  const startTime = now();\n\n  (function scroll() {\n    if (!scrollElement) {\n      onScrollEnd();\n      return;\n    }\n\n    const time = now();\n    const elapsed = Math.min((time - startTime) / scrollAnimationDuration, 1);\n\n    const value = easeInOutSine(elapsed);\n\n    const currentLeft = startLeft + (endLeft - startLeft) * value;\n    scrollElement.scrollLeft = Math.ceil(currentLeft);\n\n    if (scrollElement.scrollLeft !== Math.max(0, endLeft)) {\n      requestAnimationFrame(scroll);\n      return;\n    }\n\n    onScrollEnd();\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  })();\n}\n\nconst HorizontalScroll: FC<HorizontalScrollProps> = (props) => {\n  const { children, getScrollToLeft, getScrollToRight, showArrows = false, scrollAnimationDuration, className, hasMouse, ...restProps } = props;\n\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\n  const [canScrollRight, setCanScrollRight] = useState(false);\n\n  const [initialScrollWidth, setInitialScrollWidth] = useState(0);\n\n  const isCustomScrollingRef = useRef(false);\n\n  const scrollerRef = useRef<HTMLDivElement>(null);\n\n  const animationQueue = useRef<Callback[]>([]);\n\n  const platform = usePlatform();\n\n  function scrollTo(getScrollPosition: (offset: number) => number) {\n    animationQueue.current.push(() => doScroll({\n      scrollElement: scrollerRef.current,\n      getScrollPosition,\n      animationQueue: animationQueue.current,\n      onScrollToRightBorder: () => setCanScrollRight(false),\n      onScrollEnd: () => isCustomScrollingRef.current = false,\n      onScrollStart: () => isCustomScrollingRef.current = true,\n      initialScrollWidth,\n      scrollAnimationDuration,\n    }));\n    if (animationQueue.current.length === 1) {\n      animationQueue.current[0]();\n    }\n  }\n\n  const onscroll = useCallback(() => {\n    if (showArrows && hasMouse && scrollerRef.current && !isCustomScrollingRef.current) {\n      setCanScrollLeft(scrollerRef.current.scrollLeft > 0);\n      setCanScrollRight(scrollerRef.current.scrollLeft + scrollerRef.current.offsetWidth < scrollerRef.current.scrollWidth);\n    }\n  }, [hasMouse]);\n\n  useEffect(() => {\n    scrollerRef.current && scrollerRef.current.addEventListener('scroll', onscroll);\n    scrollerRef.current && setInitialScrollWidth(scrollerRef.current.scrollWidth);\n    return () => scrollerRef.current && scrollerRef.current.removeEventListener('scroll', onscroll);\n  }, []);\n\n  useEffect(onscroll, [scrollerRef]);\n\n  return (\n    <div {...restProps} className={classNames(className, getClassName('HorizontalScroll', platform))}>\n      {showArrows && hasMouse && canScrollLeft && <HorizontalScrollArrow direction=\"left\"\n        onClick={() => scrollTo(getScrollToLeft)} />}\n      {showArrows && hasMouse && canScrollRight && <HorizontalScrollArrow direction=\"right\"\n        onClick={() => scrollTo(getScrollToRight)} />}\n      <div className=\"HorizontalScroll__in\" ref={scrollerRef}>\n        <div className=\"HorizontalScroll__in-wrapper\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withAdaptivity(HorizontalScroll, {\n  hasMouse: true,\n});\n"],"file":"HorizontalScroll.js"}