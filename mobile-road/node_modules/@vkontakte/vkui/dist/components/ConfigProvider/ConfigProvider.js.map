{"version":3,"sources":["../../../src/components/ConfigProvider/ConfigProvider.tsx"],"names":["React","canUseDOM","ConfigProviderContext","Scheme","defaultConfigProviderProps","PropTypes","VKCOM","ConfigProvider","props","context","platform","scheme","mapOldScheme","document","body","setAttribute","setScheme","getScheme","DEPRECATED_CLIENT_LIGHT","BRIGHT_LIGHT","DEPRECATED_CLIENT_DARK","SPACE_GRAY","prevProps","isWebView","webviewType","appearance","app","transitionMotionEnabled","getContext","children","Component","any"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SACEC,qBADF,EAGEC,MAHF,EAKEC,0BALF,QAMO,yBANP;AAQA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAmBC,KAAnB,QAAgC,oBAAhC;;IAIqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAwCC,QAAxC,EAA2D;AAAA;;AAAA;;AACzD,8BAAMD,KAAN;;AADyD,gEA0B/C,UAACE,QAAD,EAAqBC,MAArB,EAAoE;AAC9E,aAAOD,QAAQ,KAAKJ,KAAb,GAAqBH,MAAM,CAACG,KAA5B,GAAoC,MAAKM,YAAL,CAAkBD,MAAlB,CAA3C;AACD,KA5B0D;;AAAA,gEA8B/C,UAACA,MAAD,EAA2BF,OAA3B,EAAuD;AACjE,OAACA,OAAO,CAACI,QAAR,IAAoBA,QAArB,EAA+BC,IAA/B,CAAoCC,YAApC,CAAiD,QAAjD,EAA2DJ,MAA3D;AACD,KAhC0D;;AAEzD,QAAIV,SAAJ,EAAe;AACb,YAAKe,SAAL,CAAe,MAAKC,SAAL,CAAeT,KAAK,CAACE,QAArB,EAA+BF,KAAK,CAACG,MAArC,CAAf,EAA6DF,QAA7D;AACD;;AAJwD;AAK1D;;;;iCAUYE,M,EAA4C;AACvD,cAAQA,MAAR;AACE,aAAKR,MAAM,CAACe,uBAAZ;AACE,iBAAOf,MAAM,CAACgB,YAAd;;AACF,aAAKhB,MAAM,CAACiB,sBAAZ;AACE,iBAAOjB,MAAM,CAACkB,UAAd;;AACF;AACE,iBAAOV,MAAP;AANJ;AAQD;;;uCAUkBW,S,EAAgC;AACjD,UAAIA,SAAS,CAACX,MAAV,KAAqB,KAAKH,KAAL,CAAWG,MAApC,EAA4C;AAC1C,aAAKK,SAAL,CAAe,KAAKC,SAAL,CAAe,KAAKT,KAAL,CAAWE,QAA1B,EAAoC,KAAKF,KAAL,CAAWG,MAA/C,CAAf,EAAuE,KAAKF,OAA5E;AACD;AACF;;;iCAEiC;AAChC,aAAO;AACLc,QAAAA,SAAS,EAAE,KAAKf,KAAL,CAAWe,SADjB;AAELC,QAAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWgB,WAFnB;AAGLb,QAAAA,MAAM,EAAE,KAAKM,SAAL,CAAe,KAAKT,KAAL,CAAWE,QAA1B,EAAoC,KAAKF,KAAL,CAAWG,MAA/C,CAHH;AAILc,QAAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWiB,UAJlB;AAKLC,QAAAA,GAAG,EAAE,KAAKlB,KAAL,CAAWkB,GALX;AAMLC,QAAAA,uBAAuB,EAAE,KAAKnB,KAAL,CAAWmB,uBAN/B;AAOLjB,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAPhB,OAAP;AASD;;;6BAEQ;AACP,0BACE,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,QAAA,KAAK,EAAE,KAAKkB,UAAL;AAAvC,SACG,KAAKpB,KAAL,CAAWqB,QADd,CADF;AAKD;;;;EA3DyC7B,KAAK,CAAC8B,S;;gBAA7BvB,c,kBAQG;AACpBM,EAAAA,QAAQ,EAAER,SAAS,CAAC0B;AADA,C;;gBARHxB,c,oCAceH,0B;;SAdfG,c","sourcesContent":["import React from 'react';\nimport { canUseDOM } from '../../lib/dom';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  Scheme,\n  AppearanceScheme,\n  defaultConfigProviderProps,\n} from './ConfigProviderContext';\nimport { HasChildren, DOMProps } from '../../types';\nimport PropTypes from 'prop-types';\nimport { Platform, VKCOM } from '../../lib/platform';\n\nexport interface ConfigProviderProps extends ConfigProviderContextInterface, HasChildren {}\n\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\n  constructor(props: ConfigProviderProps, context: DOMProps) {\n    super(props);\n    if (canUseDOM) {\n      this.setScheme(this.getScheme(props.platform, props.scheme), context);\n    }\n  }\n\n  static contextTypes = {\n    document: PropTypes.any,\n  };\n\n  // Деструктуризация нужна из бага в react-docgen-typescript\n  // https://github.com/styleguidist/react-docgen-typescript/issues/195\n  public static defaultProps = { ...defaultConfigProviderProps };\n\n  mapOldScheme(scheme: AppearanceScheme): AppearanceScheme {\n    switch (scheme) {\n      case Scheme.DEPRECATED_CLIENT_LIGHT:\n        return Scheme.BRIGHT_LIGHT;\n      case Scheme.DEPRECATED_CLIENT_DARK:\n        return Scheme.SPACE_GRAY;\n      default:\n        return scheme;\n    }\n  }\n\n  getScheme = (platform: Platform, scheme: AppearanceScheme): AppearanceScheme => {\n    return platform === VKCOM ? Scheme.VKCOM : this.mapOldScheme(scheme);\n  };\n\n  setScheme = (scheme: AppearanceScheme, context: DOMProps): void => {\n    (context.document || document).body.setAttribute('scheme', scheme);\n  };\n\n  componentDidUpdate(prevProps: ConfigProviderProps) {\n    if (prevProps.scheme !== this.props.scheme) {\n      this.setScheme(this.getScheme(this.props.platform, this.props.scheme), this.context);\n    }\n  }\n\n  getContext(): ConfigProviderProps {\n    return {\n      isWebView: this.props.isWebView,\n      webviewType: this.props.webviewType,\n      scheme: this.getScheme(this.props.platform, this.props.scheme),\n      appearance: this.props.appearance,\n      app: this.props.app,\n      transitionMotionEnabled: this.props.transitionMotionEnabled,\n      platform: this.props.platform,\n    };\n  }\n\n  render() {\n    return (\n      <ConfigProviderContext.Provider value={this.getContext()}>\n        {this.props.children}\n      </ConfigProviderContext.Provider>\n    );\n  }\n}\n"],"file":"ConfigProvider.js"}