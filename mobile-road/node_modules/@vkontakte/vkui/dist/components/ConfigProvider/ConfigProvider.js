import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import { canUseDOM } from '../../lib/dom';
import { ConfigProviderContext, Scheme, defaultConfigProviderProps } from './ConfigProviderContext';
import PropTypes from 'prop-types';
import { VKCOM } from '../../lib/platform';

var ConfigProvider = /*#__PURE__*/function (_React$Component) {
  _inherits(ConfigProvider, _React$Component);

  var _super = _createSuper(ConfigProvider);

  function ConfigProvider(props, _context) {
    var _this;

    _classCallCheck(this, ConfigProvider);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "getScheme", function (platform, scheme) {
      return platform === VKCOM ? Scheme.VKCOM : _this.mapOldScheme(scheme);
    });

    _defineProperty(_assertThisInitialized(_this), "setScheme", function (scheme, context) {
      (context.document || document).body.setAttribute('scheme', scheme);
    });

    if (canUseDOM) {
      _this.setScheme(_this.getScheme(props.platform, props.scheme), _context);
    }

    return _this;
  }

  _createClass(ConfigProvider, [{
    key: "mapOldScheme",
    value: function mapOldScheme(scheme) {
      switch (scheme) {
        case Scheme.DEPRECATED_CLIENT_LIGHT:
          return Scheme.BRIGHT_LIGHT;

        case Scheme.DEPRECATED_CLIENT_DARK:
          return Scheme.SPACE_GRAY;

        default:
          return scheme;
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.scheme !== this.props.scheme) {
        this.setScheme(this.getScheme(this.props.platform, this.props.scheme), this.context);
      }
    }
  }, {
    key: "getContext",
    value: function getContext() {
      return {
        isWebView: this.props.isWebView,
        webviewType: this.props.webviewType,
        scheme: this.getScheme(this.props.platform, this.props.scheme),
        appearance: this.props.appearance,
        app: this.props.app,
        transitionMotionEnabled: this.props.transitionMotionEnabled,
        platform: this.props.platform
      };
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(ConfigProviderContext.Provider, {
        value: this.getContext()
      }, this.props.children);
    }
  }]);

  return ConfigProvider;
}(React.Component);

_defineProperty(ConfigProvider, "contextTypes", {
  document: PropTypes.any
});

_defineProperty(ConfigProvider, "defaultProps", _objectSpread({}, defaultConfigProviderProps));

export { ConfigProvider as default };
//# sourceMappingURL=ConfigProvider.js.map