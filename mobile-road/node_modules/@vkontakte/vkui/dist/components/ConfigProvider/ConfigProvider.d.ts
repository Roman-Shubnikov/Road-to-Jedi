import React from 'react';
import { ConfigProviderContextInterface, Scheme, AppearanceScheme } from './ConfigProviderContext';
import { HasChildren, DOMProps } from '../../types';
import PropTypes from 'prop-types';
import { Platform } from '../../lib/platform';
export interface ConfigProviderProps extends ConfigProviderContextInterface, HasChildren {
}
export default class ConfigProvider extends React.Component<ConfigProviderProps> {
    constructor(props: ConfigProviderProps, context: DOMProps);
    static contextTypes: {
        document: PropTypes.Requireable<any>;
    };
    static defaultProps: {
        webviewType: import("./ConfigProviderContext").WebviewType;
        isWebView: boolean;
        scheme: Scheme;
        appearance: import("./ConfigProviderContext").Appearance;
        transitionMotionEnabled: boolean;
        platform: Platform;
    };
    mapOldScheme(scheme: AppearanceScheme): AppearanceScheme;
    getScheme: (platform: Platform, scheme: AppearanceScheme) => AppearanceScheme;
    setScheme: (scheme: AppearanceScheme, context: DOMProps) => void;
    componentDidUpdate(prevProps: ConfigProviderProps): void;
    getContext(): ConfigProviderProps;
    render(): JSX.Element;
}
