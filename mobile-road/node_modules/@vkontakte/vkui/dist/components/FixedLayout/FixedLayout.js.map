{"version":3,"sources":["../../../src/components/FixedLayout/FixedLayout.tsx"],"names":["React","getClassName","PropTypes","classNames","transitionEndEventName","transitionStartEventName","withContext","withPlatform","withPanelContext","setRef","SplitColContext","FixedLayout","position","top","width","e","panelScroll","detail","scrolls","props","panel","fromPanelHasScroll","from","toPanelHasScroll","to","canTargetPanelScroll","setState","el","offsetTop","doResize","colRef","splitCol","current","node","offsetWidth","element","getRootRef","onMountResizeTimeout","setTimeout","window","addEventListener","document","onViewTransitionStart","onViewTransitionEnd","clearInterval","removeEventListener","className","children","style","vertical","platform","filled","restProps","getRef","state","context","id","elem","getElementById","console","warn","panelEl","currentPanel","scrollHeight","clientHeight","Component","any"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, RefCallback } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport PropTypes, { Requireable } from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport { transitionEndEventName, TransitionStartEventDetail, transitionStartEventName } from '../View/View';\nimport withContext from '../../hoc/withContext';\nimport { HasPlatform, HasRootRef } from '../../types';\nimport withPlatform from '../../hoc/withPlatform';\nimport withPanelContext from '../Panel/withPanelContext';\nimport { setRef } from '../../lib/utils';\nimport { SplitColContext, SplitColContextProps } from '../SplitCol/SplitCol';\n\nexport interface FixedLayoutProps extends\n  HTMLAttributes<HTMLDivElement>,\n  HasRootRef<HTMLDivElement>,\n  HasPlatform {\n  vertical?: 'top' | 'bottom';\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n  /**\n   * @ignore\n   */\n  panel?: string;\n  /**\n   * @ignore\n   */\n  splitCol?: SplitColContextProps;\n}\n\nexport interface FixedLayoutState {\n  position: 'absolute' | null;\n  top: number;\n  width: string;\n}\n\nexport interface FixedLayoutContext {\n  document: Requireable<{}>;\n  window: Requireable<Window>;\n}\n\nclass FixedLayout extends React.Component<FixedLayoutProps, FixedLayoutState> {\n  state: FixedLayoutState = {\n    position: 'absolute',\n    top: null,\n    width: '',\n  };\n\n  el: HTMLDivElement;\n\n  static contextTypes: FixedLayoutContext = {\n    document: PropTypes.any,\n    window: PropTypes.any,\n  };\n\n  private onMountResizeTimeout: number;\n\n  get document() {\n    return this.context.document || document;\n  }\n\n  get window() {\n    return this.context.window || window;\n  }\n\n  get currentPanel(): HTMLElement {\n    const { panel: id } = this.props;\n    const elem = this.document.getElementById(id);\n\n    if (!elem) {\n      console.warn(`Element #${id} not found`);\n    }\n\n    return elem;\n  }\n\n  get canTargetPanelScroll() {\n    const panelEl = this.currentPanel;\n    if (!panelEl) {\n      return true; // Всегда предпологаем, что может быть скролл в случае, если нет document\n    }\n    return panelEl.scrollHeight > panelEl.clientHeight;\n  }\n\n  componentDidMount() {\n    this.onMountResizeTimeout = setTimeout(() => this.doResize());\n    this.window.addEventListener('resize', this.doResize);\n\n    this.document.addEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.addEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.onMountResizeTimeout);\n    this.window.removeEventListener('resize', this.doResize);\n\n    this.document.removeEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.removeEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  onViewTransitionStart: EventListener = (e: CustomEvent<TransitionStartEventDetail>) => {\n    let panelScroll = e.detail.scrolls[this.props.panel] || 0;\n    const fromPanelHasScroll = this.props.panel === e.detail.from && panelScroll > 0;\n    const toPanelHasScroll = this.props.panel === e.detail.to && panelScroll > 0;\n\n    // Для панелей, с которых уходим всегда выставляется скролл\n    // Для панелей на которые приходим надо смотреть, есть ли браузерный скролл\n    if (fromPanelHasScroll || toPanelHasScroll && this.canTargetPanelScroll) {\n      this.setState({\n        position: 'absolute',\n        top: this.el.offsetTop + panelScroll,\n        width: '',\n      });\n    }\n  };\n\n  onViewTransitionEnd: VoidFunction = () => {\n    this.setState({\n      position: null,\n      top: null,\n    });\n\n    this.doResize();\n  };\n\n  doResize = () => {\n    const { colRef } = this.props.splitCol;\n\n    if (colRef && colRef.current) {\n      const node: HTMLElement = colRef.current;\n      const width = node.offsetWidth;\n\n      this.setState({ width: `${width}px`, position: null });\n    } else {\n      this.setState({ width: '', position: null });\n    }\n  };\n\n  getRef: RefCallback<HTMLDivElement> = (element) => {\n    this.el = element;\n    setRef(element, this.props.getRootRef);\n  };\n\n  render() {\n    const { className, children, style, vertical, getRootRef, platform, filled, splitCol, panel, ...restProps } = this.props;\n\n    return (\n      <div\n        {...restProps}\n        ref={this.getRef}\n        className={classNames(getClassName('FixedLayout', platform), {\n          'FixedLayout--filled': filled,\n        }, `FixedLayout--${vertical}`, className)}\n        style={{ ...style, ...this.state }}\n      >\n        <div className=\"FixedLayout__in\">{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default withContext(\n  withPlatform(withPanelContext(FixedLayout)),\n  SplitColContext,\n  'splitCol',\n);\n"],"file":"FixedLayout.js"}