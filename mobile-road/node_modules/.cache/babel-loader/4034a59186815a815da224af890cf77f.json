{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshub\\\\Desktop\\\\Road-to-Jedi\\\\mobile-road\\\\src\\\\panels\\\\Profile\\\\panels\\\\verfy.js\";\nimport React from 'react';\nimport { Panel, PanelHeader, PanelHeaderBack, Div, FormLayout, FormLayoutGroup, Input, Textarea, Checkbox, Button, Link, Placeholder, ScreenSpinner } from '@vkontakte/vkui'; // import Icon28SmartphoneOutline from '@vkontakte/icons/dist/28/smartphone_outline';\n\nimport VerfIcon from \"../../../images/verfload.svg\"; // const platformname = (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\nexport default class Verfy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      api_url: \"https://xelene.ru/road/php/index.php?\",\n      check1: false,\n      title: '',\n      description: '',\n      // number: '',\n      // numberstatus: true,\n      // sign_number: '',\n      verfstatus: -1\n    };\n    var propsbi = this.props.this;\n    this.setPopout = propsbi.setPopout;\n    this.showErrorAlert = propsbi.showErrorAlert;\n    this.showAlert = propsbi.showAlert;\n    this.setActiveModal = propsbi.setActiveModal;\n\n    this.onChange = event => {\n      var name = event.currentTarget.name;\n      var value = event.currentTarget.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  handleForm() {\n    this.setPopout( /*#__PURE__*/React.createElement(ScreenSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }\n    }));\n    fetch(this.state.api_url + \"method=account.sendRequestVerf&title=\" + encodeURIComponent(this.state.title) + \"&description=\" + encodeURIComponent(this.state.description) + // \"&phone_number=\" + this.state.number + \n    // \"&phone_sign=\" + this.state.sign_number + \n    \"&cond1=1&\" + window.location.search.replace('?', '')).then(res => res.json()).then(data => {\n      if (data.result) {\n        this.checkVerfStatus();\n      } else {\n        this.showErrorAlert(data.error.message);\n      }\n    }).catch(err => {\n      this.showErrorAlert(err);\n    });\n  }\n\n  checkVerfStatus() {\n    fetch(this.state.api_url + \"method=account.getVerfStatus&\" + window.location.search.replace('?', '')).then(res => res.json()).then(data => {\n      if (data.result) {\n        this.setState({\n          verfstatus: data.response\n        });\n        this.setPopout(null);\n      } else {\n        this.showErrorAlert(data.error.message);\n      }\n    }).catch(err => {\n      this.showErrorAlert(err);\n    });\n  }\n\n  validateTitle(title) {\n    if (title.length > 0) {\n      let valid = ['error', 'Текст должен быть не больше 2000 и не меньше 6 символов'];\n\n      if (title.length <= 2000 && title.length > 5) {\n        valid = ['valid', ''];\n      }\n\n      return valid;\n    }\n\n    return ['default', ''];\n  }\n\n  validateDesc(title) {\n    if (title.length > 0) {\n      let valid = ['error', 'Текст должен быть не больше 2000 и не меньше 11 символов'];\n\n      if (title.length <= 2000 && title.length > 10) {\n        valid = ['valid', ''];\n      }\n\n      return valid;\n    }\n\n    return ['default', ''];\n  }\n\n  componentDidMount() {\n    this.setPopout( /*#__PURE__*/React.createElement(ScreenSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 22\n      }\n    }));\n    this.checkVerfStatus();\n  }\n\n  render() {\n    // var props = this.props.this;\n    return /*#__PURE__*/React.createElement(Panel, {\n      id: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PanelHeader, {\n      left: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PanelHeaderBack, {\n        onClick: () => window.history.back(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"\\u0412\\u0435\\u0440\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u044F\"), this.state.verfstatus !== -1 ? this.state.verfstatus === 2 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Placeholder, {\n      icon: /*#__PURE__*/React.createElement(\"img\", {\n        src: VerfIcon,\n        alt: \"\\u041E\\u0436\\u0438\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0440\\u0430\\u0441\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u0438\\u044F\",\n        style: {\n          width: 250,\n          height: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }\n      }) // action={<Div>\n      //   <Button size=\"xl\" onClick={() => {window.history.back()}}>Вернуться к настройкам</Button>\n      // </Div>}\n      ,\n      header: \"\\u0412\\u044B \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u0438 \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443 \\u043D\\u0430 \\u0432\\u0435\\u0440\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u044E\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 85\n      }\n    }, \"\\u0412\\u044B \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u0438 \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443 \\u043D\\u0430 \\u0432\\u0435\\u0440\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u044E, \\u043F\\u043E \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u0438 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0438 \\u2014 \\u043C\\u044B \\u0441\\u043E\\u043E\\u0431\\u0449\\u0438\\u043C \\u0412\\u0430\\u043C \\u043E \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u0430\\u0445 \\u043E\\u0444\\u0438\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\\u0430.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 67\n      }\n    }), \"\\u0410\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430 \\u043D\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0430\\u0435\\u0442 \\u043E \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u0435 \\u0440\\u0430\\u0441\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u0438\\u044F \\u0432\\u0435\\u0440\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438.\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLayoutGroup, {\n      top: \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n      bottom: this.validateTitle(this.state.title.trim())[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      maxLength: \"2000\",\n      onChange: this.onChange,\n      name: \"title\",\n      status: this.validateTitle(this.state.title.trim())[0],\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0439 \\u0442\\u0435\\u043A\\u0441\\u0442...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormLayoutGroup, {\n      top: \"\\u041F\\u043E\\u0447\\u0435\\u043C\\u0443 \\u0432\\u044B \\u0440\\u0435\\u0448\\u0438\\u043B\\u0438 \\u0432\\u0435\\u0440\\u0438\\u0444\\u0438\\u0446\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n      bottom: this.validateDesc(this.state.description.trim())[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Textarea, {\n      maxLength: \"2000\",\n      status: this.validateDesc(this.state.description.trim())[0],\n      name: \"description\",\n      onChange: this.onChange,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0439 \\u0442\\u0435\\u043A\\u0441\\u0442...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Checkbox, {\n      checked: this.state.check1,\n      onChange: () => this.state.check1 ? this.setState({\n        check1: false\n      }) : this.setState({\n        check1: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, \"\\u0421\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u0441 \", /*#__PURE__*/React.createElement(Link, {\n      href: \"https://vk.com/@jedi_road-chto-takoe-verifikaciya-i-kak-ee-poluchit-galochku\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 32\n      }\n    }, \"\\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u0430\\u043C\\u0438\"), \" \\u0432\\u0435\\u0440\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438\")), /*#__PURE__*/React.createElement(Div, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"xl\",\n      stretched: true,\n      disabled: !this.state.check1 || !(this.validateTitle(this.state.title)[0] === 'valid') || !(this.validateDesc(this.state.description)[0] === 'valid') // !this.state.number\n      ,\n      onClick: () => this.handleForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0430 \\u0440\\u0430\\u0441\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u0438\\u0435\"))) : null, this.props.this.state.snackbar);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rshub/Desktop/Road-to-Jedi/mobile-road/src/panels/Profile/panels/verfy.js"],"names":["React","Panel","PanelHeader","PanelHeaderBack","Div","FormLayout","FormLayoutGroup","Input","Textarea","Checkbox","Button","Link","Placeholder","ScreenSpinner","Verfy","Component","constructor","props","state","api_url","check1","title","description","verfstatus","propsbi","this","setPopout","showErrorAlert","showAlert","setActiveModal","onChange","event","name","currentTarget","value","setState","handleForm","fetch","encodeURIComponent","window","location","search","replace","then","res","json","data","result","checkVerfStatus","error","message","catch","err","response","validateTitle","length","valid","validateDesc","componentDidMount","render","id","history","back","VerfIcon","width","height","trim","snackbar"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { \n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    Div,\n    FormLayout,\n    FormLayoutGroup,\n    Input,\n    Textarea,\n    Checkbox,\n    Button,\n    Link,\n    Placeholder,\n    ScreenSpinner,\n\n    } from '@vkontakte/vkui';\n\n// import Icon28SmartphoneOutline from '@vkontakte/icons/dist/28/smartphone_outline';\nimport VerfIcon from '../../../images/verfload.svg';\n\n// const platformname = (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\n\nexport default class Verfy extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            api_url: \"https://xelene.ru/road/php/index.php?\",\n            check1: false,\n            title: '',\n            description: '',\n            // number: '',\n            // numberstatus: true,\n            // sign_number: '',\n            verfstatus: -1,\n\n        }\n        var propsbi = this.props.this;\n        this.setPopout = propsbi.setPopout;\n        this.showErrorAlert = propsbi.showErrorAlert;\n        this.showAlert = propsbi.showAlert;\n        this.setActiveModal = propsbi.setActiveModal;\n        this.onChange = (event) => {\n            var name = event.currentTarget.name;\n            var value = event.currentTarget.value;\n            this.setState({ [name]: value });\n        }\n    }\n    handleForm(){\n      this.setPopout(<ScreenSpinner />);\n      fetch(this.state.api_url + \n      \"method=account.sendRequestVerf&title=\" + encodeURIComponent(this.state.title) + \n      \"&description=\" + encodeURIComponent(this.state.description) + \n      // \"&phone_number=\" + this.state.number + \n      // \"&phone_sign=\" + this.state.sign_number + \n      \"&cond1=1&\" + window.location.search.replace('?', ''))\n      .then(res => res.json())\n      .then(data => {\n      if(data.result) {\n        this.checkVerfStatus()\n      }else{\n          this.showErrorAlert(data.error.message)\n      }\n      })\n      .catch(err => {\n          this.showErrorAlert(err)\n\n      })\n\n    }\n    checkVerfStatus(){\n      fetch(this.state.api_url + \n        \"method=account.getVerfStatus&\" + window.location.search.replace('?', ''))\n        .then(res => res.json())\n        .then(data => {\n        if(data.result) {\n          this.setState({verfstatus: data.response})\n          this.setPopout(null);\n        }else{\n            this.showErrorAlert(data.error.message)\n        }\n        })\n        .catch(err => {\n            this.showErrorAlert(err)\n\n        })\n    }\n    validateTitle(title){\n      if(title.length > 0){\n        let valid = ['error', 'Текст должен быть не больше 2000 и не меньше 6 символов' ];\n        if(title.length <= 2000 && title.length > 5){\n          valid = ['valid', '']\n        }\n  \n        return valid\n      }\n      return ['default', '']\n      \n    }\n    validateDesc(title){\n      if(title.length > 0){\n        let valid = ['error', 'Текст должен быть не больше 2000 и не меньше 11 символов'];\n        if(title.length <= 2000 && title.length > 10){\n          valid = ['valid', '']\n        }\n  \n        return valid\n      }\n      return ['default', '']\n    }\n    componentDidMount(){\n      this.setPopout(<ScreenSpinner />);\n      this.checkVerfStatus();\n    }\n\n    render() {\n        // var props = this.props.this;\n        return(\n            <Panel id={this.props.id}>\n                <PanelHeader \n                    left={<>\n                    <PanelHeaderBack onClick={() => window.history.back()}></PanelHeaderBack>\n                    </>}>\n                    Верификация\n                </PanelHeader>\n                {(this.state.verfstatus !== -1) ? (this.state.verfstatus === 2) ? <><Placeholder \n                icon={<img src={VerfIcon} alt='Ожидайте рассмотрения' style={{width: 250, height: 200}} />}\n                // action={<Div>\n                //   <Button size=\"xl\" onClick={() => {window.history.back()}}>Вернуться к настройкам</Button>\n                // </Div>}\n                header='Вы отправили заявку на верификацию'>Вы отправили заявку на верификацию, по\n                                                            окончании проверки — мы сообщим Вам\n                                                            о результатах официального статуса.\n                                                            <br /><br />Администрация проекта не сообщает о\n                                                            процессе рассмотрения\n                                                            верификации.</Placeholder>\n                                                              </> : <>\n                <FormLayout>\n                  {/* {this.state.numberstatus ? null : <FormStatus header='Некорректное заполнение формы' mode='error'>\n                    Вы должны указать номер телефона. Если этого не сделать, то пройти процедуру верефикации не получится\n                  </FormStatus>} */}\n                  <FormLayoutGroup top=\"Общая информация\" bottom={this.validateTitle(this.state.title.trim())[1]}>\n                    <Input \n                    maxLength=\"2000\" \n                    onChange={this.onChange}\n                    name='title'\n                    status={this.validateTitle(this.state.title.trim())[0]}\n                    placeholder='Введите свой текст...' />\n                  </FormLayoutGroup>\n                  <FormLayoutGroup top=\"Почему вы решили верифицировать профиль\" bottom={this.validateDesc(this.state.description.trim())[1]}>\n                    <Textarea \n                    maxLength=\"2000\" \n                    status={this.validateDesc(this.state.description.trim())[0]}\n                    name='description'\n                    onChange={this.onChange}\n                    placeholder='Введите свой текст...' />\n                  </FormLayoutGroup>\n                  {/* <SimpleCell\n                  description=\"Нажмите чтобы указать номер телефона\"\n                  onClick={() => bridge.send(\"VKWebAppGetPhoneNumber\", {})\n                  .then(data => {\n                    this.setState({number: data.phone_number, sign_number: data.sign, numberstatus: true})\n                  })\n                  .catch(error => {\n                    this.setState({numberstatus: false})\n                  })}\n                  before={<Icon28SmartphoneOutline/>}>Ваш номер телефона</SimpleCell> */}\n                  {/* {this.state.number ? <Input\n                  top='Ваш номер'\n                  disabled\n                  value={this.state.number} /> : null} */}\n                  <Checkbox checked={this.state.check1} onChange={() => this.state.check1 ? this.setState({check1: false}) : this.setState({check1: true})}>\n                    Согласен с <Link \n                    href='https://vk.com/@jedi_road-chto-takoe-verifikaciya-i-kak-ee-poluchit-galochku'\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    правилами\n                      </Link> верификации\n                  </Checkbox>\n                </FormLayout>\n                <Div>\n                  <Button \n                  size='xl' \n                  stretched\n                  disabled={\n                    !this.state.check1 || \n                    !(this.validateTitle(this.state.title)[0] === 'valid') ||\n                    !(this.validateDesc(this.state.description)[0] === 'valid')\n                    // !this.state.number\n                  }\n                  onClick={() => this.handleForm()}\n                  >Отправить на рассмотрение</Button>\n                </Div></>: null}\n                {this.props.this.state.snackbar}\n            </Panel>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}