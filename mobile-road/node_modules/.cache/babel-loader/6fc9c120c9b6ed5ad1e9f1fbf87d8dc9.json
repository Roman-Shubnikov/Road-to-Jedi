{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshub\\\\Desktop\\\\Road-to-Jedi\\\\mobile-road\\\\src\\\\panels\\\\AllQuestions.js\";\nimport React from 'react';\nimport { Panel, PanelHeader, PanelHeaderButton, Button, Group, Alert, Avatar, Placeholder, Separator, PullToRefresh, PanelSpinner, InfoRow, Header, Counter, SimpleCell, PromoBanner, FixedLayout, Cell, Div, HorizontalScroll, View, Switch, ScreenSpinner } from '@vkontakte/vkui';\nimport Icon24BrowserBack from '@vkontakte/icons/dist/24/browser_back';\nimport Icon56InboxOutline from '@vkontakte/icons/dist/56/inbox_outline';\nlet month = \"\";\n\nfunction fix_time(time) {\n  if (time < 10) {\n    return \"0\" + time;\n  } else {\n    return time;\n  }\n}\n\nvar months = ['янв', 'фев', 'мар', 'апр', 'мая', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'];\n\nclass myQuestions extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  myQuestions() {\n    this.props.setPopout( /*#__PURE__*/React.createElement(ScreenSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 34\n      }\n    }));\n    fetch(this.state.api_url + \"method=tickets.getByModeratorAnswers\" + \"&\" + window.location.search.replace('?', '')).then(res => res.json()).then(data => {\n      if (data.result) {\n        this.setState({\n          myQuestions: data.response,\n          popout: null,\n          history: [...this.state.history, \"qu\"],\n          activePanel: \"qu\"\n        });\n        window.history.pushState({\n          panel: 'qu'\n        }, `qu`);\n      }\n    }).catch(err => {\n      this.showErrorAlert();\n    });\n  }\n\n  render() {\n    var props = this.props.this; // для более удобного использования.\n\n    return /*#__PURE__*/React.createElement(Panel, {\n      id: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PanelHeader, {\n      left: /*#__PURE__*/React.createElement(PanelHeaderButton, {\n        onClick: () => window.history.back(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Icon24BrowserBack, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 80\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"\\u041C\\u043E\\u0438 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), /*#__PURE__*/React.createElement(PullToRefresh, {\n      onRefresh: props.Others,\n      isFetching: props.state.fetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, props.state.myQuestions.length > 0 ? props.state.myQuestions.map((result, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SimpleCell, {\n      key: i,\n      onClick: () => props.goTiket(result['id']),\n      description: new Date(result['time'] * 1e3).getDate() + \" \" + months[new Date(result['time'] * 1e3).getMonth()] + \" \" + new Date(result['time'] * 1e3).getFullYear() + \" в \" + fix_time(new Date(result['time'] * 1e3).getHours()) + \":\" + fix_time(new Date(result['time'] * 1e3).getMinutes()),\n      size: \"l\",\n      before: /*#__PURE__*/React.createElement(Avatar, {\n        src: result['author']['id'] === 526444378 ? \"https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Ninja-2-512.png\" : result['author']['photo_200'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, result['title']), /*#__PURE__*/React.createElement(Separator, {\n      style: {\n        width: \"90%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }))) : /*#__PURE__*/React.createElement(Placeholder, {\n      stretched: true,\n      icon: /*#__PURE__*/React.createElement(Icon56InboxOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"\\u0423\\u043F\\u0441, \\u043A\\u0430\\u0436\\u0435\\u0442\\u0441\\u044F \\u0437\\u0434\\u0435\\u0441\\u044C \\u043D\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0438\\u0445 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432.\")));\n  }\n\n}\n\nexport default myQuestions;","map":{"version":3,"sources":["C:/Users/rshub/Desktop/Road-to-Jedi/mobile-road/src/panels/AllQuestions.js"],"names":["React","Panel","PanelHeader","PanelHeaderButton","Button","Group","Alert","Avatar","Placeholder","Separator","PullToRefresh","PanelSpinner","InfoRow","Header","Counter","SimpleCell","PromoBanner","FixedLayout","Cell","Div","HorizontalScroll","View","Switch","ScreenSpinner","Icon24BrowserBack","Icon56InboxOutline","month","fix_time","time","months","myQuestions","Component","constructor","props","setPopout","fetch","state","api_url","window","location","search","replace","then","res","json","data","result","setState","response","popout","history","activePanel","pushState","panel","catch","err","showErrorAlert","render","this","id","back","Others","fetching","length","map","i","goTiket","Date","getDate","getMonth","getFullYear","getHours","getMinutes","width"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { \n    Panel,\n    PanelHeader,\n    PanelHeaderButton,\n    Button,\n    Group,\n    Alert,\n    Avatar,\n    Placeholder,\n    Separator,\n    PullToRefresh,\n    PanelSpinner,\n    InfoRow,\n    Header,\n    Counter,\n    SimpleCell,\n    PromoBanner,\n    FixedLayout,\n    Cell,\n    Div,\n    HorizontalScroll,\n    View,\n    Switch,\n    ScreenSpinner,\n    } from '@vkontakte/vkui';\n\nimport Icon24BrowserBack from '@vkontakte/icons/dist/24/browser_back';\nimport Icon56InboxOutline from '@vkontakte/icons/dist/56/inbox_outline';\n\nlet month = \"\";\nfunction fix_time(time) {\n    if(time < 10) {\n        return \"0\" + time\n    } else {\n        return time\n    }\n  }\n\n  var months = [\n    'янв',\n    'фев',\n    'мар',\n    'апр',\n    'мая',\n    'июн',\n    'июл',\n    'авг',\n    'сен',\n    'окт',\n    'ноя',\n    'дек',\n];\n\n    class myQuestions extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        myQuestions() {\n        \n            this.props.setPopout(<ScreenSpinner/>);\n            fetch(this.state.api_url + \"method=tickets.getByModeratorAnswers\" + \"&\" + window.location.search.replace('?', ''))\n              .then(res => res.json())\n              .then(data => {\n                if(data.result) {\n                  this.setState({myQuestions: data.response, popout: null, history: [...this.state.history, \"qu\"], activePanel: \"qu\"})\n                  window.history.pushState({panel: 'qu'}, `qu`);\n                }\n              })\n              .catch(err => {\n                this.showErrorAlert()\n      \n              })\n          }\n        \n\n        render() {\n            var props = this.props.this; // для более удобного использования.\n            return (\n                <Panel id={this.props.id}>\n            <PanelHeader \n                left={<PanelHeaderButton onClick={() => window.history.back()}><Icon24BrowserBack/></PanelHeaderButton>}\n            >\n                Мои вопросы\n                </PanelHeader>\n                <PullToRefresh onRefresh={props.Others} isFetching={props.state.fetching}>\n                    {props.state.myQuestions.length > 0 ?\n                    props.state.myQuestions.map((result, i) => \n                    <> \n                    <SimpleCell\n                        key={i}\n                        onClick={() => props.goTiket(result['id'])}\n                        description={new Date(result['time'] * 1e3).getDate() + \" \" + months[new Date(result['time'] * 1e3).getMonth()] + \" \" + new Date(result['time'] * 1e3).getFullYear() + \" в \" \n                        + fix_time(new Date(result['time'] * 1e3).getHours()) + \":\" + fix_time(new Date(result['time'] * 1e3).getMinutes())}\n                        size=\"l\"\n                        before={<Avatar src={result['author']['id'] === 526444378 ? \"https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Ninja-2-512.png\" : result['author']['photo_200']} />}\n                    >\n                        {result['title']}\n                    </SimpleCell>\n                    <Separator style={{width: \"90%\"}} />\n                    </>\n                    ) :\n                    <Placeholder \n                    stretched\n                    icon={<Icon56InboxOutline />}>\n                        Упс, кажется здесь нет ваших вопросов.\n                    </Placeholder>\n                    }\n                </PullToRefresh>\n            </Panel>\n            )\n            }\n        }\n  \nexport default myQuestions;"]},"metadata":{},"sourceType":"module"}