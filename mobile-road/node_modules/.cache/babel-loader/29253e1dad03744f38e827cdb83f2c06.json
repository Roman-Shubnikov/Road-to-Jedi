{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshub\\\\Desktop\\\\Road-to-Jedi\\\\mobile-road\\\\src\\\\panels\\\\notif.js\";\nimport React from 'react';\nimport { Panel, PanelHeader, Group, Alert, Avatar, Placeholder, Separator, PullToRefresh, PanelSpinner, InfoRow, Header, Counter, SimpleCell, PromoBanner, FixedLayout, Cell, Div, HorizontalScroll, View, Switch } from '@vkontakte/vkui';\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\n\nfunction fix_time(time) {\n  if (time < 10) {\n    return \"0\" + time;\n  } else {\n    return time;\n  }\n}\n\nvar month = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n\nclass Reader extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    var props = this.props.this; // для более удобного использования.\n\n    return /*#__PURE__*/React.createElement(Panel, {\n      id: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PanelHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F\"), console.log(props.state.notification), props.state.notification.length > 0 ? props.state.notification.map(function (result, i) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Cell, {\n        key: i,\n        onClick: result['object']['object'] !== '0' ? () => props.goTiket(result['object']['object']) : () => props.openMoneyTransfer(result['image'], result['text'], result['comment']),\n        description: new Date(result['time'] * 1e3).getDate() + \" \" + month[new Date(result['time'] * 1e3).getMonth()] + \" \" + new Date(result['time'] * 1e3).getFullYear() + \" в \" + fix_time(new Date(result['time'] * 1e3).getHours()) + \":\" + fix_time(new Date(result['time'] * 1e3).getMinutes()),\n        size: \"l\",\n        before: /*#__PURE__*/React.createElement(Avatar, {\n          src: result['image'],\n          size: 56,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 31\n          }\n        }),\n        multiline: \"boolean\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          lineHeight: \"17px\",\n          marginTop: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, result['text']), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: \"4px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Separator, {\n        className: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(Placeholder, {\n      stretched: true,\n      header: \"\",\n      icon: /*#__PURE__*/React.createElement(Icon56NotificationOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"\\u0423 \\u0412\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u043D\\u043E\\u0432\\u044B\\u0445 \\u0443\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0439\"));\n  }\n\n}\n\nexport default Reader;","map":{"version":3,"sources":["C:/Users/rshub/Desktop/Road-to-Jedi/mobile-road/src/panels/notif.js"],"names":["React","Panel","PanelHeader","Group","Alert","Avatar","Placeholder","Separator","PullToRefresh","PanelSpinner","InfoRow","Header","Counter","SimpleCell","PromoBanner","FixedLayout","Cell","Div","HorizontalScroll","View","Switch","Icon56NotificationOutline","fix_time","time","month","Reader","Component","constructor","props","render","this","id","console","log","state","notification","length","map","result","i","goTiket","openMoneyTransfer","Date","getDate","getMonth","getFullYear","getHours","getMinutes","lineHeight","marginTop","width"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { \n    Panel,\n    PanelHeader,\n    Group,\n    Alert,\n    Avatar,\n    Placeholder,\n    Separator,\n    PullToRefresh,\n    PanelSpinner,\n    InfoRow,\n    Header,\n    Counter,\n    SimpleCell,\n    PromoBanner,\n    FixedLayout,\n    Cell,\n    Div,\n    HorizontalScroll,\n    View,\n    Switch,\n    } from '@vkontakte/vkui';\n\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\n\nfunction fix_time(time) {\n    if(time < 10) {\n        return \"0\" + time\n    } else {\n        return time\n    }\n}\n\nvar month= [\n    'января',\n    'февраля',\n    'марта',\n    'апреля',\n    'мая',\n    'июня',\n    'июля',\n    'августа',\n    'сентября',\n    'октября',\n    'ноября',\n    'декабря',\n];\n\n\n    class Reader extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        \n\n        render() {\n            var props = this.props.this; // для более удобного использования.\n            return (\n                <Panel id={this.props.id}>\n                <PanelHeader>\n                Уведомления\n                </PanelHeader>\n                {console.log(props.state.notification)}\n                {props.state.notification.length > 0 ?\n                props.state.notification.map(function(result, i) {\n                  return (\n                      <div key={i}>\n                  <Cell\n                      key={i}\n                      onClick={result['object']['object'] !== '0' ? () => props.goTiket(result['object']['object']) : () => props.openMoneyTransfer(result['image'], result['text'], result['comment'])}\n                      description={new Date(result['time'] * 1e3).getDate() + \" \" + month[new Date(result['time'] * 1e3).getMonth()] + \" \" + new Date(result['time'] * 1e3).getFullYear() + \" в \" \n                      + fix_time(new Date(result['time'] * 1e3).getHours()) + \":\" + fix_time(new Date(result['time'] * 1e3).getMinutes())}\n                      size=\"l\"\n                      before={<Avatar src={result['image']} size={56}/>}\n                      multiline=\"boolean\"\n                  >\n                    <div style={{lineHeight: \"17px\", marginTop: \"3px\"}}>{result['text']}</div>\n                    <div style={{marginTop: \"4px\"}}></div>\n                  </Cell>\n                  <Separator className={{width: \"100%\"}}></Separator>\n                  </div>\n                  )\n                }) :\n                <Placeholder \n                stretched\n                header={\"\"}\n                icon={<Icon56NotificationOutline />}>\n                    У Вас нет новых уведомлений\n                </Placeholder>\n                }\n            </Panel>\n            )\n            }\n        }\n  \nexport default Reader;"]},"metadata":{},"sourceType":"module"}