{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshub\\\\Desktop\\\\Road-to-Jedi\\\\mobile-road\\\\src\\\\panels\\\\Profile\\\\panels\\\\AllQuestions.js\";\nimport React from 'react';\nimport { Panel, PanelHeader, PanelHeaderButton, Button, Group, Alert, Avatar, Placeholder, Separator, PullToRefresh, PanelSpinner, InfoRow, Header, Counter, SimpleCell, PromoBanner, FixedLayout, Cell, Div, HorizontalScroll, View, Switch, ScreenSpinner } from '@vkontakte/vkui';\nimport Icon24BrowserBack from '@vkontakte/icons/dist/24/browser_back';\nimport Icon56InboxOutline from '@vkontakte/icons/dist/56/inbox_outline';\nlet month = \"\";\n\nfunction fix_time(time) {\n  if (time < 10) {\n    return \"0\" + time;\n  } else {\n    return time;\n  }\n}\n\nvar months = ['янв', 'фев', 'мар', 'апр', 'мая', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'];\nexport default class myQuestions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myQuestions: [],\n      fetching: false\n    };\n\n    this.myQuestions = () => {\n      fetch(this.props.this.state.api_url + \"method=tickets.getByModeratorAnswers\" + \"&\" + window.location.search.replace('?', '')).then(res => res.json()).then(data => {\n        if (data.result) {\n          this.setState({\n            myQuestions: data.response\n          });\n          setTimeout(() => {\n            this.setState({\n              fetching: false\n            });\n          }, 500);\n        }\n      }).catch(err => {\n        this.props.this.showErrorAlert();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.myQuestions();\n  }\n\n  render() {\n    var props = this.props.this; // для более удобного использования.\n\n    return /*#__PURE__*/React.createElement(Panel, {\n      id: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PanelHeader, {\n      left: /*#__PURE__*/React.createElement(PanelHeaderButton, {\n        onClick: () => window.history.back(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Icon24BrowserBack, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 80\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"\\u041C\\u043E\\u0438 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), /*#__PURE__*/React.createElement(PullToRefresh, {\n      onRefresh: () => {\n        this.setState({\n          fetching: true\n        });\n        this.myQuestions();\n      },\n      isFetching: this.state.fetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, this.state.myQuestions.length > 0 ? this.state.myQuestions.map((result, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SimpleCell, {\n      key: i,\n      onClick: () => props.goTiket(result['id']),\n      description: new Date(result['time'] * 1e3).getDate() + \" \" + months[new Date(result['time'] * 1e3).getMonth()] + \" \" + new Date(result['time'] * 1e3).getFullYear() + \" в \" + fix_time(new Date(result['time'] * 1e3).getHours()) + \":\" + fix_time(new Date(result['time'] * 1e3).getMinutes()),\n      size: \"l\",\n      before: /*#__PURE__*/React.createElement(Avatar, {\n        src: result['author']['id'] === 526444378 ? \"https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Ninja-2-512.png\" : result['author']['photo_200'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, result['title']), /*#__PURE__*/React.createElement(Separator, {\n      style: {\n        width: \"90%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }))) : /*#__PURE__*/React.createElement(Placeholder, {\n      stretched: true,\n      icon: /*#__PURE__*/React.createElement(Icon56InboxOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"\\u0423\\u043F\\u0441, \\u043A\\u0430\\u0436\\u0435\\u0442\\u0441\\u044F \\u0437\\u0434\\u0435\\u0441\\u044C \\u043D\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0438\\u0445 \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432.\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rshub/Desktop/Road-to-Jedi/mobile-road/src/panels/Profile/panels/AllQuestions.js"],"names":["React","Panel","PanelHeader","PanelHeaderButton","Button","Group","Alert","Avatar","Placeholder","Separator","PullToRefresh","PanelSpinner","InfoRow","Header","Counter","SimpleCell","PromoBanner","FixedLayout","Cell","Div","HorizontalScroll","View","Switch","ScreenSpinner","Icon24BrowserBack","Icon56InboxOutline","month","fix_time","time","months","myQuestions","Component","constructor","props","state","fetching","fetch","this","api_url","window","location","search","replace","then","res","json","data","result","setState","response","setTimeout","catch","err","showErrorAlert","componentDidMount","render","id","history","back","length","map","i","goTiket","Date","getDate","getMonth","getFullYear","getHours","getMinutes","width"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { \n    Panel,\n    PanelHeader,\n    PanelHeaderButton,\n    Button,\n    Group,\n    Alert,\n    Avatar,\n    Placeholder,\n    Separator,\n    PullToRefresh,\n    PanelSpinner,\n    InfoRow,\n    Header,\n    Counter,\n    SimpleCell,\n    PromoBanner,\n    FixedLayout,\n    Cell,\n    Div,\n    HorizontalScroll,\n    View,\n    Switch,\n    ScreenSpinner,\n    } from '@vkontakte/vkui';\n\nimport Icon24BrowserBack from '@vkontakte/icons/dist/24/browser_back';\nimport Icon56InboxOutline from '@vkontakte/icons/dist/56/inbox_outline';\n\nlet month = \"\";\nfunction fix_time(time) {\n    if(time < 10) {\n        return \"0\" + time\n    } else {\n        return time\n    }\n  }\n\n  var months = [\n    'янв',\n    'фев',\n    'мар',\n    'апр',\n    'мая',\n    'июн',\n    'июл',\n    'авг',\n    'сен',\n    'окт',\n    'ноя',\n    'дек',\n];\n\nexport default class myQuestions extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                myQuestions:[],\n                fetching: false,\n            }\n            this.myQuestions = () => {\n                fetch(this.props.this.state.api_url + \"method=tickets.getByModeratorAnswers\" + \"&\" + window.location.search.replace('?', ''))\n                  .then(res => res.json())\n                  .then(data => {\n                    if(data.result) {\n                      this.setState({myQuestions: data.response})\n                      setTimeout(() => {\n                          this.setState({fetching: false});\n                    }, 500)\n                      \n                    }\n                  })\n                  .catch(err => {\n                    this.props.this.showErrorAlert()\n          \n                  })\n              }\n        }\n\n        \n        componentDidMount(){\n            this.myQuestions()\n        }\n\n        render() {\n            var props = this.props.this; // для более удобного использования.\n            return (\n                <Panel id={this.props.id}>\n            <PanelHeader \n                left={<PanelHeaderButton onClick={() => window.history.back()}><Icon24BrowserBack/></PanelHeaderButton>}\n            >\n                Мои вопросы\n                </PanelHeader>\n                <PullToRefresh onRefresh={() => {this.setState({fetching: true});this.myQuestions()}} isFetching={this.state.fetching}>\n                    {this.state.myQuestions.length > 0 ?\n                    this.state.myQuestions.map((result, i) => \n                    <> \n                    <SimpleCell\n                        key={i}\n                        onClick={() => props.goTiket(result['id'])}\n                        description={new Date(result['time'] * 1e3).getDate() + \" \" + months[new Date(result['time'] * 1e3).getMonth()] + \" \" + new Date(result['time'] * 1e3).getFullYear() + \" в \" \n                        + fix_time(new Date(result['time'] * 1e3).getHours()) + \":\" + fix_time(new Date(result['time'] * 1e3).getMinutes())}\n                        size=\"l\"\n                        before={<Avatar src={result['author']['id'] === 526444378 ? \"https://cdn3.iconfinder.com/data/icons/avatars-15/64/_Ninja-2-512.png\" : result['author']['photo_200']} />}\n                    >\n                        {result['title']}\n                    </SimpleCell>\n                    <Separator style={{width: \"90%\"}} />\n                    </>\n                    ) :\n                    <Placeholder \n                    stretched\n                    icon={<Icon56InboxOutline />}>\n                        Упс, кажется здесь нет ваших ответов.\n                    </Placeholder>\n                    }\n                </PullToRefresh>\n            </Panel>\n            )\n            }\n        }\n  "]},"metadata":{},"sourceType":"module"}