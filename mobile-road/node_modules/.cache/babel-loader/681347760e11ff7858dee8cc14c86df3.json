{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshub\\\\Desktop\\\\Road-to-Jedi\\\\mobile-road\\\\src\\\\panels\\\\notif.js\";\nimport React from 'react';\nimport { Panel, PanelHeader, Group, Alert, Avatar, Placeholder, Separator, PullToRefresh, PanelSpinner, InfoRow, Header, Counter, SimpleCell, PromoBanner, FixedLayout, Cell, Div, HorizontalScroll, View, Switch } from '@vkontakte/vkui';\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\n\nfunction fix_time(time) {\n  if (time < 10) {\n    return \"0\" + time;\n  } else {\n    return time;\n  }\n}\n\nvar month = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n\nclass Reader extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getNotif() {\n    fetch(this.state.api_url + \"method=tickets.get&unanswered=1&\" + window.location.search.replace('?', '')).then(res => res.json()).then(data => {\n      if (data) {\n        this.setState({\n          tiket_all: data.response,\n          popout: null\n        });\n        this.setState({\n          activeStory: \"questions\",\n          history: [\"questions\"],\n          activePanel: \"questions\"\n        });\n      }\n    }).catch(err => {\n      this.showErrorAlert();\n    });\n  }\n\n  render() {\n    var props = this.props.this; // для более удобного использования.\n\n    return /*#__PURE__*/React.createElement(Panel, {\n      id: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PanelHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PullToRefresh, {\n      onRefresh: () => {\n        props.setState({\n          fetching: true\n        });\n        props.getTopUsers();\n      },\n      isFetching: props.state.fetching,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, props.state.notification.length > 0 ? props.state.notification.map((result, i) => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCell, {\n      onClick: result['object']['object'] !== '0' ? () => props.goTiket(result['object']['object']) : () => props.openMoneyTransfer(result['image'], result['text'], result['comment']),\n      description: new Date(result['time'] * 1e3).getDate() + \" \" + month[new Date(result['time'] * 1e3).getMonth()] + \" \" + new Date(result['time'] * 1e3).getFullYear() + \" в \" + fix_time(new Date(result['time'] * 1e3).getHours()) + \":\" + fix_time(new Date(result['time'] * 1e3).getMinutes()),\n      size: \"l\",\n      before: /*#__PURE__*/React.createElement(Avatar, {\n        src: result['image'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }\n      }),\n      multiline: \"boolean\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        lineHeight: \"17px\",\n        marginTop: \"3px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, result['text']), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Separator, {\n      className: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }))) : /*#__PURE__*/React.createElement(Placeholder, {\n      stretched: true,\n      icon: /*#__PURE__*/React.createElement(Icon56NotificationOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"\\u0423 \\u0412\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u043D\\u043E\\u0432\\u044B\\u0445 \\u0443\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0439\"))));\n  }\n\n}\n\nexport default Reader;","map":{"version":3,"sources":["C:/Users/rshub/Desktop/Road-to-Jedi/mobile-road/src/panels/notif.js"],"names":["React","Panel","PanelHeader","Group","Alert","Avatar","Placeholder","Separator","PullToRefresh","PanelSpinner","InfoRow","Header","Counter","SimpleCell","PromoBanner","FixedLayout","Cell","Div","HorizontalScroll","View","Switch","Icon56NotificationOutline","fix_time","time","month","Reader","Component","constructor","props","getNotif","fetch","state","api_url","window","location","search","replace","then","res","json","data","setState","tiket_all","response","popout","activeStory","history","activePanel","catch","err","showErrorAlert","render","this","id","fetching","getTopUsers","notification","length","map","result","i","goTiket","openMoneyTransfer","Date","getDate","getMonth","getFullYear","getHours","getMinutes","lineHeight","marginTop","width"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { \n    Panel,\n    PanelHeader,\n    Group,\n    Alert,\n    Avatar,\n    Placeholder,\n    Separator,\n    PullToRefresh,\n    PanelSpinner,\n    InfoRow,\n    Header,\n    Counter,\n    SimpleCell,\n    PromoBanner,\n    FixedLayout,\n    Cell,\n    Div,\n    HorizontalScroll,\n    View,\n    Switch,\n    } from '@vkontakte/vkui';\n\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\n\nfunction fix_time(time) {\n    if(time < 10) {\n        return \"0\" + time\n    } else {\n        return time\n    }\n}\n\nvar month= [\n    'января',\n    'февраля',\n    'марта',\n    'апреля',\n    'мая',\n    'июня',\n    'июля',\n    'августа',\n    'сентября',\n    'октября',\n    'ноября',\n    'декабря',\n];\n\n\n    class Reader extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n        getNotif(){\n            fetch(this.state.api_url + \"method=tickets.get&unanswered=1&\" + window.location.search.replace('?', ''))\n            .then(res => res.json())\n            .then(data => {\n          if(data) {\n            this.setState({tiket_all: data.response, popout: null})\n            this.setState({ activeStory: \"questions\", history: [\"questions\"], activePanel: \"questions\"})\n          }\n        })\n        .catch(err => {\n          this.showErrorAlert()\n\n        })\n        }\n        \n\n        render() {\n            var props = this.props.this; // для более удобного использования.\n            return (\n                <Panel id={this.props.id}>\n                <PanelHeader>\n                Уведомления\n                </PanelHeader>\n                <><PullToRefresh onRefresh={() => {props.setState({fetching: true});props.getTopUsers()}} isFetching={props.state.fetching}>\n                    {props.state.notification.length > 0 ?\n                    props.state.notification.map((result, i) =>\n                    <React.Fragment key={i}> \n                        <SimpleCell\n                            onClick={result['object']['object'] !== '0' ? () => props.goTiket(result['object']['object']) : () => props.openMoneyTransfer(result['image'], result['text'], result['comment'])}\n                            description={new Date(result['time'] * 1e3).getDate() + \" \" + month[new Date(result['time'] * 1e3).getMonth()] + \" \" + new Date(result['time'] * 1e3).getFullYear() + \" в \" \n                            + fix_time(new Date(result['time'] * 1e3).getHours()) + \":\" + fix_time(new Date(result['time'] * 1e3).getMinutes())}\n                            size=\"l\"\n                            before={<Avatar src={result['image']} />}\n                            multiline=\"boolean\"\n                        >\n                            <div style={{lineHeight: \"17px\", marginTop: \"3px\"}}>{result['text']}</div>\n                            <div style={{marginTop: \"4px\"}}></div>\n                        </SimpleCell>\n                        <Separator className={{width: \"100%\"}}></Separator>\n                    </React.Fragment>\n                    ) :\n                    <Placeholder \n                    stretched\n                    icon={<Icon56NotificationOutline />}>\n                        У Вас нет новых уведомлений\n                    </Placeholder>\n                    }\n                </PullToRefresh></>\n            </Panel>\n            )\n            }\n        }\n  \nexport default Reader;"]},"metadata":{},"sourceType":"module"}